{"version":3,"file":"ng-whiteboard.mjs","sources":["../../../projects/ng-whiteboard/src/lib/models/element-type.enum.ts","../../../projects/ng-whiteboard/src/lib/models/line-cap.enum.ts","../../../projects/ng-whiteboard/src/lib/models/line-join.enum.ts","../../../projects/ng-whiteboard/src/lib/models/tools.enum.ts","../../../projects/ng-whiteboard/src/lib/models/elements/brush-element.model.ts","../../../projects/ng-whiteboard/src/lib/models/elements/image-element.model.ts","../../../projects/ng-whiteboard/src/lib/models/elements/line-element.model.ts","../../../projects/ng-whiteboard/src/lib/models/elements/text-element.model.ts","../../../projects/ng-whiteboard/src/lib/models/elements/ellipse-element.model.ts","../../../projects/ng-whiteboard/src/lib/models/elements/rect-element.model.ts","../../../projects/ng-whiteboard/src/lib/models/whiteboard-element.model.ts","../../../projects/ng-whiteboard/src/lib/models/format.model.ts","../../../projects/ng-whiteboard/src/lib/ng-whiteboard.service.ts","../../../projects/ng-whiteboard/src/lib/ng-whiteboard.component.ts","../../../projects/ng-whiteboard/src/lib/ng-whiteboard.component.html","../../../projects/ng-whiteboard/src/lib/ng-whiteboard.module.ts","../../../projects/ng-whiteboard/src/index.ts","../../../projects/ng-whiteboard/src/ng-whiteboard.ts"],"sourcesContent":["export enum ElementTypeEnum {\n  BRUSH = 'BRUSH',\n  LINE = 'LINE',\n  RECT = 'RECT',\n  ELLIPSE = 'ELLIPSE',\n  IMAGE = 'IMAGE',\n  TEXT = 'TEXT',\n  SHAPE = 'SHAPE',\n}\n","export enum LineCapEnum {\n  BUTT = 'butt',\n  SQUARE = 'square',\n  ROUND = 'round',\n}\n","export enum LineJoinEnum {\n  MITER = 'miter',\n  ROUND = 'round',\n  BEVEL = 'bevel',\n  MITER_CLIP = 'miter-clip',\n}\n","export enum ToolsEnum {\n  SELECT = 'SELECT',\n  BRUSH = 'BRUSH',\n  IMAGE = 'IMAGE',\n  LINE = 'LINE',\n  RECT = 'RECT',\n  ELLIPSE = 'ELLIPSE',\n  TEXT = 'TEXT',\n  ERASER = 'ERASER',\n}\n","import { LineCapEnum } from '../line-cap.enum';\nimport { LineJoinEnum } from '../line-join.enum';\nimport { IWhiteboardElementOptions } from '../whiteboard-element-options.model';\n\nexport class BrushElement {\n  strokeWidth: number;\n  strokeColor: string;\n  lineCap: LineCapEnum;\n  lineJoin: LineJoinEnum;\n  dasharray: string;\n  dashoffset: number;\n\n  constructor(options: IWhiteboardElementOptions) {\n    this.strokeWidth = options.strokeWidth || 2;\n    this.strokeColor = options.strokeColor || '#000000';\n    this.lineCap = options.lineCap || LineCapEnum.ROUND;\n    this.lineJoin = options.lineJoin || LineJoinEnum.ROUND;\n    this.dasharray = options.dasharray || '';\n    this.dashoffset = options.dashoffset || 0;\n  }\n}\n","import { IWhiteboardElementOptions } from '../whiteboard-element-options.model';\n\nexport class ImageElement {\n  width: number;\n  height: number;\n  strokeWidth: number;\n  strokeColor: string;\n  dasharray: string;\n  fill: string;\n\n\n\n\n\n\n  constructor(options: IWhiteboardElementOptions) {\n    this.width = options.width || 0;\n    this.height = options.height || 0;\n    this.strokeWidth = options.strokeWidth || 2;\n    this.strokeColor = options.strokeColor || '#000000';\n    this.dasharray = options.dasharray || '';\n    this.fill = options.fill || '#000000';\n  }\n}\n","import { LineCapEnum } from '../line-cap.enum';\nimport { LineJoinEnum } from '../line-join.enum';\nimport { IWhiteboardElementOptions } from '../whiteboard-element-options.model';\n\nexport class LineElement {\n  x1: number;\n  y1: number;\n  x2: number;\n  y2: number;\n  strokeWidth: number;\n  strokeColor: string;\n  lineCap: LineCapEnum;\n  lineJoin: LineJoinEnum;\n  dasharray: string;\n  dashoffset: number;\n\n  constructor(options: IWhiteboardElementOptions) {\n    this.x1 = options.x1 || 0;\n    this.y1 = options.y1 || 0;\n    this.x2 = options.x2 || 0;\n    this.y2 = options.y2 || 0;\n    this.strokeWidth = options.strokeWidth || 2;\n    this.strokeColor = options.strokeColor || '#000000';\n    this.lineCap = options.lineCap || LineCapEnum.ROUND;\n    this.lineJoin = options.lineJoin || LineJoinEnum.ROUND;\n    this.dasharray = options.dasharray || '';\n    this.dashoffset = options.dashoffset || 0;\n  }\n}\n","import { LineCapEnum } from '../line-cap.enum';\nimport { LineJoinEnum } from '../line-join.enum';\nimport { IWhiteboardElementOptions } from '../whiteboard-element-options.model';\n\nexport class TextElement {\n  left: number;\n  top: number;\n  width: number;\n  height: number;\n\n  fontFamily: string;\n  fontSize: number;\n  fontStyle: 'normal' | 'italic';\n  fontWeight: 'normal' | 'bold';\n  fill: string;\n\n  strokeWidth: number;\n  strokeColor: string;\n  lineJoin: LineJoinEnum;\n  lineCap: LineCapEnum;\n  dasharray: string;\n  dashoffset: number;\n\n  // font-size-adjust\n  // font-stretch\n  // font-style\n  // font-variant\n  // font-weight\n\n\n  constructor(options: IWhiteboardElementOptions) {\n    this.left = options.left || 0;\n    this.top = options.top || 0;\n    this.width = options.width || 0;\n    this.height = options.height || 0;\n    this.fontFamily = options.fontFamily || 'Arial';\n    this.fontSize = options.fontSize || 14;\n    this.fontStyle = options.fontStyle || 'normal';\n    this.fontWeight = options.fontWeight || 'normal';\n    this.strokeWidth = options.strokeWidth || 2;\n    this.strokeColor = options.strokeColor || '#000000';\n    this.fill = options.fill || '#000000';\n    this.lineJoin = options.lineJoin || LineJoinEnum.ROUND;\n    this.lineCap = options.lineCap || LineCapEnum.ROUND;\n    this.dasharray = options.dasharray || '';\n    this.dashoffset = options.dashoffset || 0;\n  }\n}\n","import { LineCapEnum } from '../line-cap.enum';\nimport { LineJoinEnum } from '../line-join.enum';\nimport { IWhiteboardElementOptions } from '../whiteboard-element-options.model';\n\nexport class EllipseElement {\n  cx: number;\n  cy: number;\n  rx: number;\n  ry: number;\n\n  strokeWidth: number;\n  strokeColor: string;\n  fill: string;\n  dasharray: string;\n  dashoffset: number;\n  lineCap: LineCapEnum;\n  lineJoin: LineJoinEnum;\n\n  constructor(options: IWhiteboardElementOptions) {\n    this.cx = options.cx || 0;\n    this.cy = options.cy || 0;\n    this.rx = options.rx || 0;\n    this.ry = options.ry || 0;\n    this.dasharray = options.dasharray || '';\n    this.dashoffset = options.dashoffset || 0;\n    this.strokeWidth = options.strokeWidth || 2;\n    this.strokeColor = options.strokeColor || '#000000';\n    this.fill = options.fill || '#000000';\n    this.lineCap = options.lineCap || LineCapEnum.ROUND;\n    this.lineJoin = options.lineJoin || LineJoinEnum.ROUND;\n  }\n}\n","import { IWhiteboardElementOptions } from '../whiteboard-element-options.model';\n\nexport class RectElement {\n  width: number;\n  height: number;\n  x1: number;\n  y1: number;\n  rx: number;\n  strokeWidth: number;\n  strokeColor: string;\n  fill: string;\n  dasharray: string;\n  dashoffset: number;\n\n  constructor(options: IWhiteboardElementOptions) {\n    this.width = options.width || 0;\n    this.height = options.height || 0;\n    this.x1 = options.x1 || 0;\n    this.y1 = options.y1 || 0;\n    this.rx = options.rx || 0;\n    this.strokeWidth = options.strokeWidth || 2;\n    this.strokeColor = options.strokeColor || '#000000';\n    this.fill = options.fill || '#000000';\n    this.dasharray = options.dasharray || '';\n    this.dashoffset = options.dashoffset || 0;\n  }\n}\n","import { ElementTypeEnum } from './element-type.enum';\nimport { BrushElement, EllipseElement, ImageElement, LineElement, RectElement, TextElement } from './elements';\nimport { IWhiteboardElementOptions } from './whiteboard-element-options.model';\n\nexport class WhiteboardElement {\n  type: ElementTypeEnum;\n  value: string;\n  id: string;\n  x = 0;\n  y = 0;\n  rotation = 0;\n  opacity = 100;\n\n  options: IWhiteboardElementOptions = {};\n\n  constructor(type: ElementTypeEnum, options: IWhiteboardElementOptions, value?: string) {\n    this.type = type;\n    this.value = value || '';\n    this.id = `element_${this.type}_${Math.floor(Math.random() * 1000)}`;\n\n    switch (type) {\n      case ElementTypeEnum.BRUSH:\n        this.options = new BrushElement(options);\n        break;\n      case ElementTypeEnum.IMAGE:\n        this.options = new ImageElement(options);\n        break;\n      case ElementTypeEnum.RECT:\n        this.options = new RectElement(options);\n        break;\n      case ElementTypeEnum.LINE:\n        this.options = new LineElement(options);\n        break;\n      case ElementTypeEnum.ELLIPSE:\n        this.options = new EllipseElement(options);\n        break;\n      case ElementTypeEnum.TEXT:\n        this.options = new TextElement(options);\n        break;\n      default:\n        this.options = {};\n        break;\n    }\n  }\n}\n","export type formatTypes = 'png' | 'jpeg' | 'svg' | 'base64';\n\nexport enum FormatType {\n  Png = 'png',\n  Jpeg = 'jpeg',\n  Svg = 'svg',\n  Base64 = 'base64',\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { FormatType, formatTypes, IAddImage } from './models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NgWhiteboardService {\n  // Observable string sources\n  private eraseSvgMethodCallSource = new Subject<void>();\n  private saveSvgMethodCallSource = new Subject<{ name: string; format: formatTypes }>();\n  private undoSvgMethodCallSource = new Subject<void>();\n  private redoSvgMethodCallSource = new Subject<void>();\n  private resetSvgMethodCalled = new Subject<void>();\n  private addImageMethodCallSource = new Subject<IAddImage>();\n\n  // Observable string streams\n  eraseSvgMethodCalled$ = this.eraseSvgMethodCallSource.asObservable();\n  saveSvgMethodCalled$ = this.saveSvgMethodCallSource.asObservable();\n  undoSvgMethodCalled$ = this.undoSvgMethodCallSource.asObservable();\n  redoSvgMethodCalled$ = this.redoSvgMethodCallSource.asObservable();\n  resetSvgMethodCalled$ = this.resetSvgMethodCalled.asObservable();\n\n  addImageMethodCalled$ = this.addImageMethodCallSource.asObservable();\n\n  // Service message commands\n  public erase(): void {\n    this.eraseSvgMethodCallSource.next();\n  }\n  public save(format: formatTypes = FormatType.Base64, name: string = 'New board'): void {\n    this.saveSvgMethodCallSource.next({ name, format });\n  }\n  public undo(): void {\n    this.undoSvgMethodCallSource.next();\n  }\n  public redo(): void {\n    this.redoSvgMethodCallSource.next();\n  }\n  public reset(): void {\n    this.resetSvgMethodCalled.next();\n  }\n  public addImage(image: string | ArrayBuffer, x?: number, y?: number): void {\n    this.addImageMethodCallSource.next({ image, x, y });\n  }\n}\n","import { Component, AfterViewInit, ViewChild, Input, ElementRef, OnDestroy, Output, EventEmitter, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { NgWhiteboardService } from './ng-whiteboard.service';\nimport { Subscription, fromEvent, skip, BehaviorSubject } from 'rxjs';\nimport { ElementTypeEnum, FormatType, formatTypes, IAddImage, LineCapEnum, LineJoinEnum, ToolsEnum, WhiteboardElement, WhiteboardOptions } from './models';\nimport { ContainerElement, curveBasis, drag, line, mouse, select, Selection, event } from 'd3';\n\ntype BBox = { x: number; y: number; width: number; height: number };\n\nconst d3Line = line().curve(curveBasis);\n@Component({\n  selector: 'ng-whiteboard',\n  templateUrl: './ng-whiteboard.component.html',\n  styleUrls: ['./ng-whiteboard.component.scss'],\n})\nexport class NgWhiteboardComponent implements OnInit, OnChanges, AfterViewInit, OnDestroy {\n  @ViewChild('svgContainer', { static: false })\n  svgContainer!: ElementRef<ContainerElement>;\n  @ViewChild('textInput', { static: false }) private textInput!: ElementRef<HTMLInputElement>;\n\n  private _data: BehaviorSubject<WhiteboardElement[]> = new BehaviorSubject<WhiteboardElement[]>([]);\n\n  @Input() set data(data: WhiteboardElement[]) {\n    if (data) {\n      this._data.next(data);\n    }\n  }\n  get data(): WhiteboardElement[] {\n    return this._data.getValue();\n  }\n\n  @Input() options!: WhiteboardOptions;\n\n  @Input() set selectedTool(tool: ToolsEnum) {\n    if (this._selectedTool !== tool) {\n      this._selectedTool = tool;\n      this.toolChanged.emit(tool);\n      this.clearSelectedElement();\n    }\n  }\n  get selectedTool(): ToolsEnum {\n    return this._selectedTool;\n  }\n  @Input() drawingEnabled = true;\n  @Input() canvasWidth = 800;\n  @Input() canvasHeight = 600;\n  @Input() fullScreen = true;\n  @Input() center = true;\n  @Input() strokeColor = '#000';\n  @Input() strokeWidth = 2;\n  @Input() backgroundColor = '#fff';\n  @Input() lineJoin = LineJoinEnum.ROUND;\n  @Input() lineCap = LineCapEnum.ROUND;\n  @Input() fill = '#333';\n  @Input() zoom = 1;\n  @Input() fontFamily = 'sans-serif';\n  @Input() fontSize = 24;\n  @Input() dasharray = '';\n  @Input() dashoffset = 0;\n  @Input() x = 0;\n  @Input() y = 0;\n  @Input() enableGrid = false;\n  @Input() gridSize = 10;\n  @Input() snapToGrid = false;\n  @Input() persistenceId: string|undefined = undefined;\n\n  @Output() ready = new EventEmitter();\n  @Output() dataChange = new EventEmitter<WhiteboardElement[]>();\n  @Output() clear = new EventEmitter();\n  @Output() undo = new EventEmitter();\n  @Output() redo = new EventEmitter();\n  @Output() save = new EventEmitter<string>();\n  @Output() imageAdded = new EventEmitter();\n  @Output() selectElement = new EventEmitter<WhiteboardElement | null>();\n  @Output() deleteElement = new EventEmitter<WhiteboardElement>();\n  @Output() toolChanged = new EventEmitter<ToolsEnum>();\n\n  private selection!: Selection<Element, unknown, null, undefined>;\n\n  private _subscriptionList: Subscription[] = [];\n\n  private _initialData: WhiteboardElement[] = [];\n  private undoStack: WhiteboardElement[][] = [];\n  private redoStack: WhiteboardElement[][] = [];\n  private _selectedTool: ToolsEnum = ToolsEnum.BRUSH;\n  selectedElement!: WhiteboardElement;\n\n  types = ElementTypeEnum;\n  tools = ToolsEnum;\n\n  tempElement!: WhiteboardElement;\n  tempDraw!: [number, number][];\n\n  rubberBox = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n    display: 'none',\n  };\n\n  constructor(private whiteboardService: NgWhiteboardService) {}\n\n  ngOnInit(): void {\n    this._initInputsFromOptions(this.options);\n    this._initObservables();\n    this._initialData = JSON.parse(JSON.stringify(this.data));\n    if (this.persistenceId) {\n      const stored = JSON.parse(localStorage.getItem(`whitebaord_${this.persistenceId}`)||'null');\n      if (stored) {\n        this._data.next(stored.data || []);\n        this.undoStack = stored.undoStack || [];\n        this.redoStack = stored.redoStack || [];\n      }\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['options']) {\n      //&& !isEqual(changes.options.currentValue, changes.options.previousValue)\n      this._initInputsFromOptions(changes['options'].currentValue);\n    }\n  }\n\n  ngAfterViewInit() {\n    this.selection = select<Element, unknown>(this.svgContainer.nativeElement);\n    setTimeout(() => {\n      this.resizeScreen();\n    }, 0);\n    this.initalizeEvents(this.selection);\n    this.ready.emit();\n  }\n\n  ngOnDestroy(): void {\n    this._subscriptionList.forEach((subscription) => this._unsubscribe(subscription));\n  }\n\n  private _initInputsFromOptions(options: WhiteboardOptions): void {\n    if (options) {\n      if (options.drawingEnabled != undefined) {\n        this.drawingEnabled = options.drawingEnabled;\n      }\n      if (options.selectedTool != undefined) {\n        this.selectedTool = options.selectedTool;\n      }\n      if (options.canvasWidth != undefined) {\n        this.canvasWidth = options.canvasWidth;\n      }\n      if (options.canvasHeight != undefined) {\n        this.canvasHeight = options.canvasHeight;\n      }\n      if (options.fullScreen != undefined) {\n        this.fullScreen = options.fullScreen;\n      }\n      if (options.center != undefined) {\n        this.center = options.center;\n      }\n      if (options.strokeColor != undefined) {\n        this.strokeColor = options.strokeColor;\n      }\n      if (options.strokeWidth != undefined) {\n        this.strokeWidth = options.strokeWidth;\n      }\n      if (options.backgroundColor != undefined) {\n        this.backgroundColor = options.backgroundColor;\n      }\n      if (options.lineJoin != undefined) {\n        this.lineJoin = options.lineJoin;\n      }\n      if (options.lineCap != undefined) {\n        this.lineCap = options.lineCap;\n      }\n      if (options.fill != undefined) {\n        this.fill = options.fill;\n      }\n      if (options.zoom != undefined) {\n        this.zoom = options.zoom;\n      }\n      if (options.fontFamily != undefined) {\n        this.fontFamily = options.fontFamily;\n      }\n      if (options.fontSize != undefined) {\n        this.fontSize = options.fontSize;\n      }\n      if (options.dasharray != undefined) {\n        this.dasharray = options.dasharray;\n      }\n      if (options.dashoffset != undefined) {\n        this.dashoffset = options.dashoffset;\n      }\n      if (options.x != undefined) {\n        this.x = options.x;\n      }\n      if (options.y != undefined) {\n        this.y = options.y;\n      }\n      if (options.enableGrid != undefined) {\n        this.enableGrid = options.enableGrid;\n      }\n      if (options.gridSize != undefined) {\n        this.gridSize = options.gridSize;\n      }\n      if (options.snapToGrid != undefined) {\n        this.snapToGrid = options.snapToGrid;\n      }\n      if (options.persistenceId != undefined) {\n        this.persistenceId = options.persistenceId;\n      }\n    }\n  }\n\n  private _initObservables(): void {\n    this._subscriptionList.push(\n      this.whiteboardService.saveSvgMethodCalled$.subscribe(({ name, format }) => this.saveSvg(name, format))\n    );\n    this._subscriptionList.push(\n      this.whiteboardService.addImageMethodCalled$.subscribe((image) => this.handleDrawImage(image))\n    );\n    this._subscriptionList.push(this.whiteboardService.eraseSvgMethodCalled$.subscribe(() => this._clearSvg()));\n    this._subscriptionList.push(this.whiteboardService.resetSvgMethodCalled$.subscribe(() => this._reset()));\n    this._subscriptionList.push(this.whiteboardService.undoSvgMethodCalled$.subscribe(() => this.undoDraw()));\n    this._subscriptionList.push(this.whiteboardService.redoSvgMethodCalled$.subscribe(() => this.redoDraw()));\n    this._subscriptionList.push(fromEvent(window, 'resize').subscribe(() => this.resizeScreen()));\n    this._subscriptionList.push(\n      this._data.pipe(skip(1)).subscribe((data) => {\n        let stored = JSON.parse(localStorage.getItem(`whitebaord_${this.persistenceId}`)||'');\n        stored.data = data;\n        localStorage.setItem(`whitebaord_${this.persistenceId}`, JSON.stringify(stored));\n        this.dataChange.emit(data);\n      })\n    );\n  }\n\n  initalizeEvents(selection: Selection<Element, unknown, null, undefined>): void {\n    if (!this.drawingEnabled) {\n      return;\n    }\n    let dragging = false;\n\n    selection.call(\n      drag()\n        .on('start', () => {\n          dragging = true;\n          this.redoStack = [];\n          this.updateLocalStorage();\n          this.handleStartEvent();\n        })\n        .on('drag', () => {\n          if (!dragging) {\n            return;\n          }\n          this.handleDragEvent();\n        })\n        .on('end', () => {\n          dragging = false;\n          this.handleEndEvent();\n        })\n    );\n  }\n\n  handleStartEvent() {\n    switch (this.selectedTool) {\n      case ToolsEnum.BRUSH:\n        this.handleStartBrush();\n        break;\n      case ToolsEnum.IMAGE:\n        this.handleImageTool();\n        break;\n      case ToolsEnum.LINE:\n        this.handleStartLine();\n        break;\n      case ToolsEnum.RECT:\n        this.handleStartRect();\n        break;\n      case ToolsEnum.ELLIPSE:\n        this.handleStartEllipse();\n        break;\n      case ToolsEnum.TEXT:\n        this.handleTextTool();\n        break;\n      case ToolsEnum.SELECT:\n        this.handleSelectTool();\n        break;\n      case ToolsEnum.ERASER:\n        this.handleEraserTool();\n        break;\n      default:\n        break;\n    }\n  }\n  handleDragEvent() {\n    switch (this.selectedTool) {\n      case ToolsEnum.BRUSH:\n        this.handleDragBrush();\n        break;\n      case ToolsEnum.LINE:\n        this.handleDragLine();\n        break;\n      case ToolsEnum.RECT:\n        this.handleDragRect();\n        break;\n      case ToolsEnum.ELLIPSE:\n        this.handleDragEllipse();\n        break;\n      case ToolsEnum.TEXT:\n        this.handleTextDrag();\n        break;\n      default:\n        break;\n    }\n  }\n  handleEndEvent() {\n    switch (this.selectedTool) {\n      case ToolsEnum.BRUSH:\n        this.handleEndBrush();\n        break;\n      case ToolsEnum.LINE:\n        this.handleEndLine();\n        break;\n      case ToolsEnum.RECT:\n        this.handleEndRect();\n        break;\n      case ToolsEnum.ELLIPSE:\n        this.handleEndEllipse();\n        break;\n      case ToolsEnum.TEXT:\n        this.handleTextEnd();\n        break;\n      default:\n        break;\n    }\n  }\n  // Handle Brush tool\n  handleStartBrush() {\n    const element = this._generateNewElement(ElementTypeEnum.BRUSH);\n    this.tempDraw = [this._calculateXAndY(mouse(this.selection.node() as SVGSVGElement))];\n    element.value = d3Line(this.tempDraw) as string;\n    element.options.strokeWidth = this.strokeWidth;\n    this.tempElement = element;\n  }\n  handleDragBrush() {\n    this.tempDraw.push(this._calculateXAndY(mouse(this.selection.node() as SVGSVGElement)));\n    this.tempElement.value = d3Line(this.tempDraw) as string;\n  }\n  handleEndBrush() {\n    this.tempDraw.push(this._calculateXAndY(mouse(this.selection.node() as SVGSVGElement)));\n    this.tempElement.value = d3Line(this.tempDraw) as string;\n    this._pushToData(this.tempElement);\n    this._pushToUndo();\n    this.tempDraw = null as never;\n    this.tempElement = null as never;\n  }\n  // Handle Image tool\n  handleImageTool() {\n    const [x, y] = this._calculateXAndY(mouse(this.selection.node() as SVGSVGElement));\n    const input = document.createElement('input');\n    input.type = 'file';\n    input.accept = 'image/*';\n    input.onchange = (e) => {\n      const files = (e.target as HTMLInputElement).files;\n      if (files) {\n        const reader = new FileReader();\n        reader.onload = (e: ProgressEvent) => {\n          const image = (e.target as FileReader).result as string;\n          this.handleDrawImage({ image, x, y });\n        };\n        reader.readAsDataURL(files[0]);\n      }\n    };\n    input.click();\n  }\n  // Handle Draw Image\n  handleDrawImage(imageSrc: IAddImage) {\n    try {\n      const tempImg = new Image();\n      tempImg.onload = () => {\n        const svgHeight = this.canvasHeight;\n        const imageWidth = tempImg.width;\n        const imageHeight = tempImg.height;\n        const aspectRatio = tempImg.width / tempImg.height;\n        const height = imageHeight > svgHeight ? svgHeight - 40 : imageHeight;\n        const width = height === svgHeight - 40 ? (svgHeight - 40) * aspectRatio : imageWidth;\n\n        let x = imageSrc.x || (imageWidth - width) * (imageSrc.x || 0);\n        let y = imageSrc.y || (imageHeight - height) * (imageSrc.y || 0);\n\n        if (x < 0) {\n          x = 0;\n        }\n        if (y < 0) {\n          y = 0;\n        }\n\n        const element = this._generateNewElement(ElementTypeEnum.IMAGE);\n        element.value = imageSrc.image as string;\n        element.options.width = width;\n        element.options.height = height;\n        element.x = x;\n        element.y = y;\n        this._pushToData(element);\n        this.imageAdded.emit();\n        this._pushToUndo();\n      };\n      tempImg.src = imageSrc.image as string;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  // Handle Line tool\n  handleStartLine() {\n    const element = this._generateNewElement(ElementTypeEnum.LINE);\n    let [x, y] = this._calculateXAndY(mouse(this.selection.node() as SVGSVGElement));\n\n    if (this.snapToGrid) {\n      x = this._snapToGrid(x);\n      y = this._snapToGrid(y);\n    }\n\n    element.options.x1 = x;\n    element.options.y1 = y;\n    element.options.x2 = x;\n    element.options.y2 = y;\n    this.tempElement = element;\n  }\n  handleDragLine() {\n    let [x2, y2] = this._calculateXAndY(mouse(this.selection.node() as SVGSVGElement));\n\n    if (this.snapToGrid) {\n      x2 = this._snapToGrid(x2);\n      y2 = this._snapToGrid(y2);\n    }\n\n    if (event.sourceEvent.shiftKey) {\n      const x1 = this.tempElement.options.x1 as number;\n      const y1 = this.tempElement.options.y1 as number;\n      const { x, y } = this._snapToAngle(x1, y1, x2, y2);\n      [x2, y2] = [x, y];\n    }\n\n    this.tempElement.options.x2 = x2;\n    this.tempElement.options.y2 = y2;\n  }\n  handleEndLine() {\n    if (\n      this.tempElement.options.x1 != this.tempElement.options.x2 ||\n      this.tempElement.options.y1 != this.tempElement.options.y2\n    ) {\n      this._pushToData(this.tempElement);\n      this._pushToUndo();\n      this.tempElement = null as never;\n    }\n  }\n  // Handle Rect tool\n  handleStartRect() {\n    const element = this._generateNewElement(ElementTypeEnum.RECT);\n    let [x, y] = this._calculateXAndY(mouse(this.selection.node() as SVGSVGElement));\n    if (this.snapToGrid) {\n      x = this._snapToGrid(x);\n      y = this._snapToGrid(y);\n    }\n    element.options.x1 = x;\n    element.options.y1 = y;\n    element.options.x2 = x;\n    element.options.y2 = y;\n    element.options.width = 1;\n    element.options.height = 1;\n    this.tempElement = element;\n  }\n  handleDragRect() {\n    const [x, y] = this._calculateXAndY(mouse(this.selection.node() as SVGSVGElement));\n    const start_x = this.tempElement.options.x1 || 0;\n    const start_y = this.tempElement.options.y1 || 0;\n    let w = Math.abs(x - start_x);\n    let h = Math.abs(y - start_y);\n    let new_x = null;\n    let new_y = null;\n\n    if (event.sourceEvent.shiftKey) {\n      w = h = Math.max(w, h);\n      new_x = start_x < x ? start_x : start_x - w;\n      new_y = start_y < y ? start_y : start_y - h;\n    } else {\n      new_x = Math.min(start_x, x);\n      new_y = Math.min(start_y, y);\n    }\n    if (event.sourceEvent.altKey) {\n      w *= 2;\n      h *= 2;\n      new_x = start_x - w / 2;\n      new_y = start_y - h / 2;\n    }\n    if (this.snapToGrid) {\n      w = this._snapToGrid(w);\n      h = this._snapToGrid(h);\n      new_x = this._snapToGrid(new_x);\n      new_y = this._snapToGrid(new_y);\n    }\n\n    this.tempElement.options.width = w;\n    this.tempElement.options.height = h;\n    this.tempElement.options.x2 = new_x;\n    this.tempElement.options.y2 = new_y;\n  }\n  handleEndRect() {\n    if (this.tempElement.options.width != 0 || this.tempElement.options.height != 0) {\n      this._pushToData(this.tempElement);\n      this._pushToUndo();\n      this.tempElement = null as never;\n    }\n  }\n  // Handle Ellipse tool\n  handleStartEllipse() {\n    const element = this._generateNewElement(ElementTypeEnum.ELLIPSE);\n    const [x, y] = this._calculateXAndY(mouse(this.selection.node() as SVGSVGElement));\n\n    // workaround\n    element.options.x1 = x;\n    element.options.y1 = y;\n\n    element.options.cx = x;\n    element.options.cy = y;\n    this.tempElement = element;\n  }\n  handleDragEllipse() {\n    const [x, y] = this._calculateXAndY(mouse(this.selection.node() as SVGSVGElement));\n    const start_x = this.tempElement.options.x1 || 0;\n    const start_y = this.tempElement.options.y1 || 0;\n    let cx = Math.abs(start_x + (x - start_x) / 2);\n    let cy = Math.abs(start_y + (y - start_y) / 2);\n    let rx = Math.abs(start_x - cx);\n    let ry = Math.abs(start_y - cy);\n\n    if (event.sourceEvent.shiftKey) {\n      ry = rx;\n      cy = y > start_y ? start_y + rx : start_y - rx;\n    }\n    if (event.sourceEvent.altKey) {\n      cx = start_x;\n      cy = start_y;\n      rx = Math.abs(x - cx);\n      ry = event.sourceEvent.shiftKey ? rx : Math.abs(y - cy);\n    }\n\n    this.tempElement.options.rx = rx;\n    this.tempElement.options.ry = ry;\n    this.tempElement.options.cx = cx;\n    this.tempElement.options.cy = cy;\n  }\n  handleEndEllipse() {\n    if (this.tempElement.options.rx != 0 || this.tempElement.options.ry != 0) {\n      this._pushToData(this.tempElement);\n      this._pushToUndo();\n      this.tempElement = null as never;\n    }\n  }\n  // Handle Text tool\n  handleTextTool() {\n    if (this.tempElement) {\n      // finish the current one if needed\n      this.finishTextInput();\n      return;\n    }\n    const element = this._generateNewElement(ElementTypeEnum.TEXT);\n    const [x, y] = this._calculateXAndY(mouse(this.selection.node() as SVGSVGElement));\n    element.options.top = y;\n    element.options.left = x;\n    element.options.strokeWidth = 0;\n    this.tempElement = element;\n    setTimeout(() => {\n      this.textInput.nativeElement.focus();\n    }, 0);\n  }\n  handleTextDrag() {\n    if (!this.tempElement) {\n      return;\n    }\n    const [x, y] = this._calculateXAndY(mouse(this.selection.node() as SVGSVGElement));\n    this.tempElement.options.top = y;\n    this.tempElement.options.left = x;\n  }\n  handleTextEnd() {\n    if (!this.tempElement) {\n      return;\n    }\n    this._pushToUndo();\n  }\n  // Handle Select tool\n  handleSelectTool() {\n    const mouse_target = this._getMouseTarget();\n    if (mouse_target) {\n      if (mouse_target.id === 'selectorGroup') {\n        return;\n      }\n      const id = mouse_target.getAttribute('data-wb-id');\n      const selectedElement = this.data.find((el) => el.id === id) as WhiteboardElement;\n      this.setSelectedElement(selectedElement);\n    } else {\n      this.clearSelectedElement();\n    }\n  }\n  // Handle Eraser tool\n  handleEraserTool() {\n    const mouse_target = this._getMouseTarget();\n    if (mouse_target) {\n      const id = mouse_target.getAttribute('data-wb-id');\n      const element = this.data.find((el) => el.id === id) as WhiteboardElement;\n      if (element) {\n        this.data = this.data.filter((el) => el.id !== id);\n        this._pushToUndo();\n        this.deleteElement.emit(element);\n      }\n    }\n  }\n  // convert the value of this.textInput.nativeElement to an SVG text node, unless it's empty,\n  // and then dismiss this.textInput.nativeElement\n  finishTextInput() {\n    const value = this.textInput.nativeElement.value;\n    this.tempElement.value = value;\n    if (this.tempElement.value) {\n      this._pushToData(this.tempElement);\n      this._pushToUndo();\n    }\n    this.tempElement = null as never;\n  }\n  // Handle Text Input\n  updateTextItem(value: string) {\n    if (this.tempElement && this.selectedTool == ToolsEnum.TEXT) {\n      this.tempElement.value = value;\n    }\n  }\n  setSelectedElement(element: WhiteboardElement) {\n    this.selectedTool = ToolsEnum.SELECT;\n    const currentBBox = this._getElementBbox(element);\n    this.selectedElement = element;\n    this.selectElement.emit(element);\n    this._showGrips(currentBBox);\n  }\n  clearSelectedElement() {\n    this.selectedElement = null as never;\n    this.rubberBox.display = 'none';\n    this.selectElement.emit(null);\n  }\n  private saveSvg(name: string, format: formatTypes) {\n    const svgCanvas = this.selection.select('#svgcontent').clone(true);\n    svgCanvas.select('#selectorParentGroup').remove();\n    (svgCanvas.select('#contentBackground').node() as SVGSVGElement).removeAttribute('opacity');\n    const svg = svgCanvas.node() as SVGSVGElement;\n    svg.setAttribute('x', '0');\n    svg.setAttribute('y', '0');\n\n    const svgString = this.saveAsSvg(svg as Element);\n    switch (format) {\n      case FormatType.Base64:\n        this.svgString2Image(svgString, this.canvasWidth, this.canvasHeight, format, (img) => {\n          this.save.emit(img);\n        });\n        break;\n      case FormatType.Svg: {\n        const imgSrc = 'data:image/svg+xml;base64,' + btoa(unescape(encodeURIComponent(svgString)));\n        this.download(imgSrc, name);\n        this.save.emit(imgSrc);\n        break;\n      }\n      default:\n        this.svgString2Image(svgString, this.canvasWidth, this.canvasHeight, format, (img) => {\n          this.download(img, name);\n          this.save.emit(img);\n        });\n        break;\n    }\n    svgCanvas.remove();\n  }\n  private svgString2Image(\n    svgString: string,\n    width: number,\n    height: number,\n    format: string,\n    callback: (img: string) => void\n  ) {\n    // set default for format parameter\n    format = format || 'png';\n    // SVG data URL from SVG string\n    const svgData = 'data:image/svg+xml;base64,' + btoa(unescape(encodeURIComponent(svgString)));\n    // create canvas in memory(not in DOM)\n    const canvas = document.createElement('canvas');\n    // get canvas context for drawing on canvas\n    const context = canvas.getContext('2d') as CanvasRenderingContext2D;\n    // set canvas size\n    canvas.width = width;\n    canvas.height = height;\n    // create image in memory(not in DOM)\n    const image = new Image();\n    // later when image loads run this\n    image.onload = () => {\n      // async (happens later)\n      // clear canvas\n      context.clearRect(0, 0, width, height);\n      // draw image with SVG data to canvas\n      context.drawImage(image, 0, 0, width, height);\n      // snapshot canvas as png\n      const pngData = canvas.toDataURL('image/' + format);\n      // pass png data URL to callback\n      callback(pngData);\n    }; // end async\n    // start loading SVG data into in memory image\n    image.src = svgData;\n  }\n  private saveAsSvg(svgNode: Element): string {\n    const serializer = new XMLSerializer();\n    let svgString = serializer.serializeToString(svgNode);\n    svgString = svgString.replace(/(\\w+)?:?xlink=/g, 'xmlns:xlink='); // Fix root xlink without namespace\n    svgString = svgString.replace(/NS\\d+:href/g, 'xlink:href');\n    return svgString;\n  }\n  private download(url: string, name: string): void {\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('visibility', 'hidden');\n    link.download = name || 'new white-board';\n    document.body.appendChild(link);\n    link.click();\n  }\n  private _pushToData(element: WhiteboardElement) {\n    this.data.push(element);\n    this._data.next(this.data);\n  }\n  private _clearSvg() {\n    this.data = [];\n    this._data.next(this.data);\n    this._pushToUndo();\n    this.clear.emit();\n  }\n  private undoDraw() {\n    if (!this.undoStack.length) {\n      return;\n    }\n    const currentState = this.undoStack.pop();\n    this.redoStack.push(currentState as WhiteboardElement[]);\n    if(this.undoStack.length){\n      this.data = JSON.parse(JSON.stringify(this.undoStack[this.undoStack.length-1]));\n    } else {\n      this.data = JSON.parse(JSON.stringify(this._initialData)) || [];\n    }\n    this.updateLocalStorage();\n    this.undo.emit();\n  }\n  private redoDraw() {\n    if (!this.redoStack.length) {\n      return;\n    }\n    const currentState = this.redoStack.pop();\n    this.undoStack.push(JSON.parse(JSON.stringify(currentState)) as WhiteboardElement[]);\n    this.data = currentState || [];\n    this.updateLocalStorage();\n    this.redo.emit();\n  }\n  private _pushToUndo() {\n    this.undoStack.push(JSON.parse(JSON.stringify(this.data)));\n    this.updateLocalStorage();\n  }\n  private _reset(): void {\n    this.undoStack = [];\n    this.redoStack = [];\n    this.data = this._initialData;\n    this.updateLocalStorage();\n  }\n  private updateLocalStorage(): void {\n    const storageObject = {data: this.data, undoStack: this.undoStack, redoStack: this.redoStack};\n    localStorage.setItem(`whitebaord_${this.persistenceId}`, JSON.stringify(storageObject));\n  }\n  private _generateNewElement(name: ElementTypeEnum): WhiteboardElement {\n    const element = new WhiteboardElement(name, {\n      strokeWidth: this.strokeWidth,\n      strokeColor: this.strokeColor,\n      fill: this.fill,\n      lineJoin: this.lineJoin,\n      lineCap: this.lineCap,\n      fontSize: this.fontSize,\n      fontFamily: this.fontFamily,\n      dasharray: this.dasharray,\n      dashoffset: this.dashoffset,\n    });\n    return element;\n  }\n  private _calculateXAndY([x, y]: [number, number]): [number, number] {\n    return [(x - this.x) / this.zoom, (y - this.y) / this.zoom];\n  }\n  private resizeScreen() {\n    const svgContainer = this.svgContainer.nativeElement;\n    if (this.fullScreen) {\n      this.canvasWidth = svgContainer.clientWidth;\n      this.canvasHeight = svgContainer.clientHeight;\n    }\n    if (this.center) {\n      this.x = svgContainer.clientWidth / 2 - this.canvasWidth / 2;\n      this.y = svgContainer.clientHeight / 2 - this.canvasHeight / 2;\n    }\n  }\n  private _snapToAngle(x1: number, y1: number, x2: number, y2: number) {\n    const snap = Math.PI / 4; // 45 degrees\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    const angle = Math.atan2(dy, dx);\n    const dist = Math.sqrt(dx * dx + dy * dy);\n    const snapangle = Math.round(angle / snap) * snap;\n    const x = x1 + dist * Math.cos(snapangle);\n    const y = y1 + dist * Math.sin(snapangle);\n    return { x: x, y: y, a: snapangle };\n  }\n  private _snapToGrid(n: number) {\n    const snap = this.gridSize;\n    const n1 = Math.round(n / snap) * snap;\n    return n1;\n  }\n  private _getElementBbox(element: WhiteboardElement): DOMRect {\n    const el = this.selection.select(`#item_${element.id}`).node() as SVGGraphicsElement;\n    const bbox = el.getBBox();\n    return bbox;\n  }\n  private _getMouseTarget(): SVGGraphicsElement | null {\n    const evt: Event = event.sourceEvent;\n    if (evt == null || evt.target == null) {\n      return null;\n    }\n    let mouse_target = evt.target as SVGGraphicsElement;\n    if (mouse_target.id === 'svgroot') {\n      return null;\n    }\n    if (mouse_target.parentNode) {\n      mouse_target = mouse_target.parentNode.parentNode as SVGGraphicsElement;\n      if (mouse_target.id === 'selectorGroup') {\n        return mouse_target;\n      }\n      while (!mouse_target.id.includes('item_')) {\n        if (mouse_target.id === 'svgroot') {\n          return null;\n        }\n        mouse_target = mouse_target.parentNode as SVGGraphicsElement;\n      }\n    }\n    return mouse_target;\n  }\n  private _showGrips(bbox: DOMRect) {\n    this.rubberBox = {\n      x: bbox.x - ((this.selectedElement.options.strokeWidth as number) || 0) * 0.5,\n      y: bbox.y - ((this.selectedElement.options.strokeWidth as number) || 0) * 0.5,\n      width: bbox.width + (this.selectedElement.options.strokeWidth as number) || 0,\n      height: bbox.height + (this.selectedElement.options.strokeWidth as number) || 0,\n      display: 'block',\n    };\n  }\n  moveSelect(downEvent: PointerEvent) {\n    let isPointerDown = true;\n    const element = downEvent.target as SVGGraphicsElement;\n    element.addEventListener('pointermove', (moveEvent) => {\n      if (!isPointerDown) return;\n      if (this.selectedElement) {\n        this.selectedElement.x += (moveEvent as PointerEvent).movementX;\n        this.selectedElement.y += (moveEvent as PointerEvent).movementY;\n      }\n    });\n    element.addEventListener('pointerup', () => {\n      isPointerDown = false;\n    });\n  }\n  resizeSelect(downEvent: PointerEvent) {\n    let isPointerDown = true;\n    const element = downEvent.target as SVGGraphicsElement;\n    document.addEventListener('pointermove', (moveEvent) => {\n      if (!isPointerDown) return;\n      const grip = element.id.split('_')[2];\n      const x = (moveEvent as PointerEvent).movementX;\n      const y = (moveEvent as PointerEvent).movementY;\n      const bbox = this._getElementBbox(this.selectedElement);\n      const width = bbox.width;\n      const height = bbox.height;\n      switch (this.selectedElement.type) {\n        case ElementTypeEnum.ELLIPSE:\n          this._resizeElipse(grip, { x, y, width, height });\n          break;\n        case ElementTypeEnum.LINE:\n          this._resizeLine(grip, { x, y, width, height });\n          break;\n        default:\n          this._resizeDefault(grip, { x, y, width, height });\n          break;\n      }\n      this._showGrips(this._getElementBbox(this.selectedElement));\n    });\n    document.addEventListener('pointerup', () => {\n      isPointerDown = false;\n    });\n  }\n  private _resizeLine(dir: string, bbox: BBox) {\n    switch (dir) {\n      case 'nw':\n        (this.selectedElement.options.x1 as number) += bbox.x;\n        (this.selectedElement.options.y1 as number) += bbox.y;\n        break;\n      case 'n':\n        (this.selectedElement.options.y1 as number) += bbox.y;\n        break;\n      case 'ne':\n        (this.selectedElement.options.x2 as number) += bbox.x;\n        (this.selectedElement.options.y1 as number) += bbox.y;\n        break;\n      case 'e':\n        (this.selectedElement.options.x2 as number) += bbox.x;\n        break;\n      case 'se':\n        (this.selectedElement.options.x2 as number) += bbox.x;\n        (this.selectedElement.options.y2 as number) += bbox.y;\n        break;\n      case 's':\n        (this.selectedElement.options.y2 as number) += bbox.y;\n        break;\n      case 'sw':\n        (this.selectedElement.options.x1 as number) += bbox.x;\n        (this.selectedElement.options.y2 as number) += bbox.y;\n        break;\n      case 'w':\n        (this.selectedElement.options.x1 as number) += bbox.x;\n        break;\n    }\n  }\n  private _resizeElipse(dir: string, bbox: BBox) {\n    switch (dir) {\n      case 'nw':\n        this.selectedElement.x += bbox.x / 2;\n        this.selectedElement.y += bbox.y / 2;\n        (this.selectedElement.options.rx as number) -= bbox.x / 2;\n        (this.selectedElement.options.ry as number) -= bbox.y / 2;\n        break;\n      case 'n':\n        this.selectedElement.y += bbox.y / 2;\n        (this.selectedElement.options.ry as number) -= bbox.y / 2;\n        break;\n      case 'ne':\n        this.selectedElement.x += bbox.x / 2;\n        this.selectedElement.y += bbox.y / 2;\n        (this.selectedElement.options.rx as number) += bbox.x / 2;\n        (this.selectedElement.options.ry as number) -= bbox.y / 2;\n        break;\n      case 'e':\n        this.selectedElement.x += bbox.x / 2;\n        (this.selectedElement.options.rx as number) += bbox.x / 2;\n        break;\n      case 'se':\n        this.selectedElement.x += bbox.x / 2;\n        this.selectedElement.y += bbox.y / 2;\n        (this.selectedElement.options.rx as number) += bbox.x / 2;\n        (this.selectedElement.options.ry as number) += bbox.y / 2;\n        break;\n      case 's':\n        this.selectedElement.y += bbox.y / 2;\n        (this.selectedElement.options.ry as number) += bbox.y / 2;\n        break;\n      case 'sw':\n        this.selectedElement.x += bbox.x / 2;\n        this.selectedElement.y += bbox.y / 2;\n        (this.selectedElement.options.rx as number) -= bbox.x / 2;\n        (this.selectedElement.options.ry as number) += bbox.y / 2;\n        break;\n      case 'w':\n        this.selectedElement.x += bbox.x / 2;\n        (this.selectedElement.options.rx as number) -= bbox.x / 2;\n        break;\n    }\n  }\n  private _resizeDefault(dir: string, bbox: BBox) {\n    switch (dir) {\n      case 'nw':\n        this.selectedElement.x += bbox.x;\n        this.selectedElement.y += bbox.y;\n        this.selectedElement.options.width = bbox.width - bbox.x;\n        this.selectedElement.options.height = bbox.height - bbox.y;\n        break;\n      case 'n':\n        this.selectedElement.y += bbox.y;\n        this.selectedElement.options.height = bbox.height - bbox.y;\n        break;\n      case 'ne':\n        this.selectedElement.y += bbox.y;\n        this.selectedElement.options.width = bbox.width + bbox.x;\n        this.selectedElement.options.height = bbox.height - bbox.y;\n        break;\n      case 'e':\n        this.selectedElement.options.width = bbox.width + bbox.x;\n        break;\n      case 'se':\n        this.selectedElement.options.width = bbox.width + bbox.x;\n        this.selectedElement.options.height = bbox.height + bbox.y;\n        break;\n      case 's':\n        this.selectedElement.options.height = bbox.height + bbox.y;\n        break;\n      case 'sw':\n        this.selectedElement.x += bbox.x;\n        this.selectedElement.options.width = bbox.width - bbox.x;\n        this.selectedElement.options.height = bbox.height + bbox.y;\n        break;\n      case 'w':\n        this.selectedElement.x += bbox.x;\n        this.selectedElement.options.width = bbox.width - bbox.x;\n        break;\n    }\n  }\n\n  private _unsubscribe(subscription: Subscription): void {\n    if (subscription) {\n      subscription.unsubscribe();\n    }\n  }\n}\n","<svg [class]=\"'svgroot ' + selectedTool\" #svgContainer id=\"svgroot\" xlinkns=\"http://www.w3.org/1999/xlink\">\n  <svg id=\"canvasBackground\" [attr.width]=\"canvasWidth * zoom\" [attr.height]=\"canvasHeight * zoom\" [attr.x]=\"x\"\n    [attr.y]=\"y\" style=\"pointer-events: none;\">\n    <defs id=\"grid-pattern\">\n      <pattern id=\"smallGrid\" [attr.width]=\"gridSize\" [attr.height]=\"gridSize\" patternUnits=\"userSpaceOnUse\">\n        <path [attr.d]=\"'M '+gridSize+' 0 H 0 V '+gridSize+''\" fill=\"none\" stroke=\"gray\" stroke-width=\"0.5\" />\n      </pattern>\n      <pattern id=\"grid\" width=\"100\" height=\"100\" patternUnits=\"userSpaceOnUse\">\n        <rect width=\"100\" height=\"100\" fill=\"url(#smallGrid)\" />\n        <path d=\"M 100 0 H 0 V 100\" fill=\"none\" stroke=\"gray\" stroke-width=\"2\" />\n      </pattern>\n    </defs>\n    <defs id=\"placeholder_defs\"></defs>\n    <rect width=\"100%\" height=\"100%\" x=\"0\" y=\"0\" stroke-width=\"0\" stroke=\"transparent\" [attr.fill]=\"backgroundColor\"\n      style=\"pointer-events: none;\"></rect>\n    <g *ngIf=\"enableGrid\">\n      <rect x=\"-100\" y=\"-100\" [attr.width]=\"(canvasWidth * zoom) + 100*2\" [attr.height]=\"(canvasHeight * zoom) + 100*2\"\n        fill=\"url(#grid)\" />\n    </g>\n  </svg>\n  <svg xmlns=\"http://www.w3.org/2000/svg\" [attr.width]=\"canvasWidth * zoom\" [attr.height]=\"canvasHeight * zoom\"\n    [attr.viewBox]=\"[0, 0, canvasWidth, canvasHeight]\" id=\"svgcontent\" [attr.x]=\"x\" [attr.y]=\"y\">\n    <rect id=\"contentBackground\" opacity=\"0\" width=\"100%\" height=\"100%\" x=\"0\" y=\"0\" stroke-width=\"0\"\n      stroke=\"transparent\" [attr.fill]=\"backgroundColor\"></rect>\n    <g style=\"pointer-events: all;\">\n      <title style=\"pointer-events: inherit;\">Whiteboard</title>\n      <ng-container *ngFor=\"let item of data\">\n        <g class=\"wb_element\" [id]=\"'item_' + item.id\" [attr.data-wb-id]=\"item.id\" [ngSwitch]=\"item.type\"\n          [attr.transform]=\"'translate(' + item.x + ',' + item.y + ')' + 'rotate(' + item.rotation + ')'\"\n          [attr.opacity]=\"item.opacity / 100\">\n          <g *ngSwitchCase=\"types.BRUSH\">\n            <path class=\"brush\" fill=\"none\" [attr.d]=\"item.value\" [attr.stroke-dasharray]=\"item.options.dasharray\"\n              [attr.stroke-dashoffset]=\"1\" [attr.stroke-width]=\"item.options.strokeWidth\"\n              [attr.stroke-linecap]=\"item.options.lineCap\" [attr.stroke-linejoin]=\"item.options.lineJoin\"\n              [attr.stroke]=\"item.options.strokeColor\"></path>\n          </g>\n          <g *ngSwitchCase=\"types.IMAGE\">\n            <image [attr.height]=\"item.options.height\" [attr.width]=\"item.options.width\" preserveAspectRatio=\"none\"\n              [attr.xlink:href]=\"item.value\" [attr.href]=\"item.value\" [attr.stroke-width]=\"item.options.strokeWidth\"\n              [attr.stroke-dasharray]=\"item.options.dasharray\" [attr.fill]=\"item.options.fill\"\n              [attr.stroke]=\"item.options.strokeColor\" style=\"pointer-events: inherit;\"></image>\n          </g>\n          <g *ngSwitchCase=\"types.LINE\">\n            <line class=\"line\" [attr.x1]=\"item.options.x1\" [attr.y1]=\"item.options.y1\" [attr.x2]=\"item.options.x2\"\n              [attr.y2]=\"item.options.y2\" style=\"pointer-events: inherit;\"\n              [attr.stroke-dasharray]=\"item.options.dasharray\" [attr.stroke-dashoffset]=\"1\"\n              [attr.stroke-width]=\"item.options.strokeWidth\" [attr.stroke-linecap]=\"item.options.lineCap\"\n              [attr.stroke-linejoin]=\"item.options.lineJoin\" [attr.stroke]=\"item.options.strokeColor\"></line>\n          </g>\n          <g *ngSwitchCase=\"types.RECT\">\n            <rect class=\"rect\" [attr.x]=\"item.options.x2\" [attr.y]=\"item.options.y2\" [attr.rx]=\"item.options.rx\"\n              [attr.width]=\"item.options.width\" [attr.height]=\"item.options.height\"\n              [attr.stroke-dasharray]=\"item.options.dasharray\" [attr.stroke-dashoffset]=\"item.options.dashoffset\"\n              [attr.stroke-width]=\"item.options.strokeWidth\" [attr.fill]=\"item.options.fill\"\n              [attr.stroke]=\"item.options.strokeColor\"></rect>\n          </g>\n          <g *ngSwitchCase=\"types.ELLIPSE\">\n            <ellipse [attr.cx]=\"item.options.cx\" [attr.cy]=\"item.options.cy\" [attr.rx]=\"item.options.rx\"\n              [attr.ry]=\"item.options.ry\" style=\"pointer-events: inherit;\"\n              [attr.stroke-dasharray]=\"item.options.dasharray\" [attr.stroke-dashoffset]=\"1\"\n              [attr.stroke-width]=\"item.options.strokeWidth\" [attr.stroke-linecap]=\"item.options.lineCap\"\n              [attr.stroke-linejoin]=\"item.options.lineJoin\" [attr.stroke]=\"item.options.strokeColor\"\n              [attr.fill]=\"item.options.fill\"></ellipse>\n          </g>\n          <g *ngSwitchCase=\"types.TEXT\">\n            <text class=\"text_element\" text-anchor=\"start\" xml:space=\"preserve\" [attr.x]=\"item.options.left\"\n              [attr.y]=\"item.options.top\" [attr.width]=\"item.options.width\" [attr.height]=\"item.options.height\"\n              style=\"pointer-events: inherit;\" [attr.font-size]=\"item.options.fontSize\"\n              [attr.font-family]=\"item.options.fontFamily\" [attr.stroke-dasharray]=\"item.options.dasharray\"\n              [attr.stroke-dashoffset]=\"1\" [attr.stroke-width]=\"item.options.strokeWidth\"\n              [attr.stroke-linecap]=\"item.options.lineCap\" [attr.stroke-linejoin]=\"item.options.lineJoin\"\n              [attr.stroke]=\"item.options.strokeColor\" [attr.fill]=\"item.options.fill\"\n              [attr.font-style]=\"item.options.fontStyle\" [attr.font-weight]=\"item.options.fontWeight\">\n              {{ item.value }}\n            </text>\n          </g>\n          <g *ngSwitchDefault>\n            <text>Not defined type</text>\n          </g>\n        </g>\n      </ng-container>\n      <g class=\"temp-element\" *ngIf=\"tempElement\"  [ngSwitch]=\"selectedTool\">\n      <g *ngSwitchCase=\"tools.BRUSH\">\n        <path class=\"brush\" fill=\"none\" [attr.d]=\"tempElement.value\" [attr.stroke-dasharray]=\"tempElement.options.dasharray\"\n          [attr.stroke-dashoffset]=\"1\" [attr.stroke-width]=\"tempElement.options.strokeWidth\"\n          [attr.stroke-linecap]=\"tempElement.options.lineCap\" [attr.stroke-linejoin]=\"tempElement.options.lineJoin\"\n          [attr.stroke]=\"tempElement.options.strokeColor\"></path>\n      </g>\n      <g *ngSwitchCase=\"types.IMAGE\">\n        <image [attr.height]=\"tempElement.options.height\" [attr.width]=\"tempElement.options.width\" preserveAspectRatio=\"none\"\n          [attr.xlink:href]=\"tempElement.value\" [attr.href]=\"tempElement.value\" [attr.stroke-width]=\"tempElement.options.strokeWidth\"\n          [attr.stroke-dasharray]=\"tempElement.options.dasharray\" [attr.fill]=\"tempElement.options.fill\"\n          [attr.stroke]=\"tempElement.options.strokeColor\" style=\"pointer-events: inherit;\"></image>\n      </g>\n      <g *ngSwitchCase=\"types.LINE\">\n        <line class=\"line\" [attr.x1]=\"tempElement.options.x1\" [attr.y1]=\"tempElement.options.y1\" [attr.x2]=\"tempElement.options.x2\"\n          [attr.y2]=\"tempElement.options.y2\" style=\"pointer-events: inherit;\"\n          [attr.stroke-dasharray]=\"tempElement.options.dasharray\" [attr.stroke-dashoffset]=\"1\"\n          [attr.stroke-width]=\"tempElement.options.strokeWidth\" [attr.stroke-linecap]=\"tempElement.options.lineCap\"\n          [attr.stroke-linejoin]=\"tempElement.options.lineJoin\" [attr.stroke]=\"tempElement.options.strokeColor\"></line>\n      </g>\n      <g *ngSwitchCase=\"types.RECT\">\n        <rect class=\"rect\" [attr.x]=\"tempElement.options.x2\" [attr.y]=\"tempElement.options.y2\" [attr.rx]=\"tempElement.options.rx\"\n          [attr.width]=\"tempElement.options.width\" [attr.height]=\"tempElement.options.height\"\n          [attr.stroke-dasharray]=\"tempElement.options.dasharray\" [attr.stroke-dashoffset]=\"tempElement.options.dashoffset\"\n          [attr.stroke-width]=\"tempElement.options.strokeWidth\" [attr.fill]=\"tempElement.options.fill\"\n          [attr.stroke]=\"tempElement.options.strokeColor\"></rect>\n      </g>\n      <g *ngSwitchCase=\"types.ELLIPSE\">\n        <ellipse [attr.cx]=\"tempElement.options.cx\" [attr.cy]=\"tempElement.options.cy\" [attr.rx]=\"tempElement.options.rx\"\n          [attr.ry]=\"tempElement.options.ry\" style=\"pointer-events: inherit;\"\n          [attr.stroke-dasharray]=\"tempElement.options.dasharray\" [attr.stroke-dashoffset]=\"1\"\n          [attr.stroke-width]=\"tempElement.options.strokeWidth\" [attr.stroke-linecap]=\"tempElement.options.lineCap\"\n          [attr.stroke-linejoin]=\"tempElement.options.lineJoin\" [attr.stroke]=\"tempElement.options.strokeColor\"\n          [attr.fill]=\"tempElement.options.fill\"></ellipse>\n      </g>\n      <g *ngSwitchCase=\"types.TEXT\">\n        <text class=\"text_element\" text-anchor=\"start\" xml:space=\"preserve\" [attr.x]=\"tempElement.options.left\"\n          [attr.y]=\"tempElement.options.top\" [attr.width]=\"tempElement.options.width\" [attr.height]=\"tempElement.options.height\"\n          style=\"pointer-events: inherit;\" [attr.font-size]=\"tempElement.options.fontSize\"\n          [attr.font-family]=\"tempElement.options.fontFamily\" [attr.stroke-dasharray]=\"tempElement.options.dasharray\"\n          [attr.stroke-dashoffset]=\"1\" [attr.stroke-width]=\"tempElement.options.strokeWidth\"\n          [attr.stroke-linecap]=\"tempElement.options.lineCap\" [attr.stroke-linejoin]=\"tempElement.options.lineJoin\"\n          [attr.stroke]=\"tempElement.options.strokeColor\" [attr.fill]=\"tempElement.options.fill\"\n          [attr.font-style]=\"tempElement.options.fontStyle\" [attr.font-weight]=\"tempElement.options.fontWeight\">\n          {{ tempElement.value }}\n        </text>\n      </g>\n      <g *ngSwitchDefault>\n        <text>Not defined type</text>\n      </g>\n    </g>\n      <g id=\"selectorParentGroup\" *ngIf=\"selectedElement\">\n        <g class=\"selectorGroup\" id=\"selectorGroup\" transform=\"\" [style.display]=\"rubberBox.display\"\n          [attr.transform]=\"'translate(' + selectedElement.x + ',' + selectedElement.y + ')' + 'rotate(' + selectedElement.rotation + ')'\">\n          <g display=\"inline\">\n            <rect id=\"selectedBox\" fill=\"none\" stroke=\"#4F80FF\" shape-rendering=\"crispEdges\"\n              style=\"pointer-events: none;\" [attr.x]=\"rubberBox.x\" [attr.y]=\"rubberBox.y\" [attr.width]=\"rubberBox.width\"\n              [attr.height]=\"rubberBox.height\" style=\"cursor: move;\" (pointerdown)=\"moveSelect($event)\">\n            </rect>\n          </g>\n          <g display=\"inline\">\n            <circle class=\"selector_rotate\" id=\"selectorGrip_rotate_nw\" fill=\"#000\" r=\"8\" stroke=\"#000\" fill-opacity=\"0\"\n              stroke-opacity=\"0\" stroke-width=\"0\" [attr.cx]=\"rubberBox.x - 4\" [attr.cy]=\"rubberBox.y - 4\"></circle>\n            <circle class=\"selector_rotate\" id=\"selectorGrip_rotate_ne\" fill=\"#000\" r=\"8\" stroke=\"#000\" fill-opacity=\"0\"\n              stroke-opacity=\"0\" stroke-width=\"0\" [attr.cx]=\"rubberBox.x + rubberBox.width + 4\"\n              [attr.cy]=\"rubberBox.y - 4\">\n            </circle>\n            <circle class=\"selector_rotate\" id=\"selectorGrip_rotate_se\" fill=\"#000\" r=\"8\" stroke=\"#000\" fill-opacity=\"0\"\n              stroke-opacity=\"0\" stroke-width=\"0\" [attr.cx]=\"rubberBox.x + rubberBox.width + 4\"\n              [attr.cy]=\"rubberBox.y + rubberBox.height + 4\"></circle>\n            <circle class=\"selector_rotate\" id=\"selectorGrip_rotate_sw\" fill=\"#000\" r=\"8\" stroke=\"#000\" fill-opacity=\"0\"\n              stroke-opacity=\"0\" stroke-width=\"0\" [attr.cx]=\"rubberBox.x - 4\"\n              [attr.cy]=\"rubberBox.y + rubberBox.height + 4\">\n            </circle>\n            <rect id=\"selectorGrip_resize_nw\" width=\"8\" height=\"8\" fill=\"#4F80FF\" stroke=\"rgba(0,0,0,0)\"\n              style=\"cursor: nw-resize;\" pointer-events=\"all\" [attr.x]=\"rubberBox.x - 4\" [attr.y]=\"rubberBox.y - 4\"\n              (pointerdown)=\"resizeSelect($event)\">\n            </rect>\n            <rect id=\"selectorGrip_resize_n\" width=\"8\" height=\"8\" fill=\"#4F80FF\" stroke=\"rgba(0,0,0,0)\"\n              style=\"cursor: n-resize;\" pointer-events=\"all\" [attr.x]=\"rubberBox.x + rubberBox.width / 2 - 4\"\n              [attr.y]=\"rubberBox.y - 4\" (pointerdown)=\"resizeSelect($event)\"></rect>\n            <rect id=\"selectorGrip_resize_ne\" width=\"8\" height=\"8\" fill=\"#4F80FF\" stroke=\"rgba(0,0,0,0)\"\n              style=\"cursor: ne-resize;\" pointer-events=\"all\" [attr.x]=\"rubberBox.x + rubberBox.width - 4\"\n              [attr.y]=\"rubberBox.y - 4\" (pointerdown)=\"resizeSelect($event)\"></rect>\n            <rect id=\"selectorGrip_resize_e\" width=\"8\" height=\"8\" fill=\"#4F80FF\" stroke=\"rgba(0,0,0,0)\"\n              style=\"cursor: e-resize;\" pointer-events=\"all\" [attr.x]=\"rubberBox.x + rubberBox.width - 4\"\n              [attr.y]=\"rubberBox.y + rubberBox.height / 2 - 4\" (pointerdown)=\"resizeSelect($event)\"></rect>\n            <rect id=\"selectorGrip_resize_se\" width=\"8\" height=\"8\" fill=\"#4F80FF\" stroke=\"rgba(0,0,0,0)\"\n              style=\"cursor: se-resize;\" pointer-events=\"all\" [attr.x]=\"rubberBox.x + rubberBox.width - 4\"\n              [attr.y]=\"rubberBox.y + rubberBox.height - 4\" (pointerdown)=\"resizeSelect($event)\"></rect>\n            <rect id=\"selectorGrip_resize_s\" width=\"8\" height=\"8\" fill=\"#4F80FF\" stroke=\"rgba(0,0,0,0)\"\n              style=\"cursor: s-resize;\" pointer-events=\"all\" [attr.x]=\"rubberBox.x + rubberBox.width / 2 - 4\"\n              [attr.y]=\"rubberBox.y + rubberBox.height - 4\" (pointerdown)=\"resizeSelect($event)\"></rect>\n            <rect id=\"selectorGrip_resize_sw\" width=\"8\" height=\"8\" fill=\"#4F80FF\" stroke=\"rgba(0,0,0,0)\"\n              style=\"cursor: sw-resize;\" pointer-events=\"all\" [attr.x]=\"rubberBox.x - 4\"\n              [attr.y]=\"rubberBox.y + rubberBox.height - 4\" (pointerdown)=\"resizeSelect($event)\"></rect>\n            <rect id=\"selectorGrip_resize_w\" width=\"8\" height=\"8\" fill=\"#4F80FF\" stroke=\"rgba(0,0,0,0)\"\n              style=\"cursor: w-resize;\" pointer-events=\"all\" [attr.x]=\"rubberBox.x - 4\"\n              [attr.y]=\"rubberBox.y + rubberBox.height / 2 - 4\" (pointerdown)=\"resizeSelect($event)\"></rect>\n          </g>\n        </g>\n      </g>\n    </g>\n  </svg>\n</svg>\n\n<div [style]=\"'font-family:' + fontFamily + ';' + 'font-size:' + fontSize + 'px;'+\n'pointer-events: none; width: ' + canvasWidth * zoom + 'px; '+\n  'height: ' + canvasHeight * zoom + 'px;' +\n  'position: absolute; top: ' + y + 'px; left: ' + x + 'px;'\" *ngIf=\"tempElement && selectedTool === tools.TEXT\">\n  <input #textInput type=\"text\" class=\"text-input\" [style]=\"'width: ' + textInput.value.length + 'ch; '+\n    'height: ' + (2 * zoom) + 'ch;'+\n    'top: ' + ((tempElement.options.top || 0 - 10) * zoom) + 'px;' +\n    'left: ' + ((tempElement.options.left || 0 + 3)* zoom) + 'px;'\n    \" (input)=\"updateTextItem(textInput.value)\" autofocus />\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgWhiteboardComponent } from './ng-whiteboard.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [NgWhiteboardComponent],\n  exports: [NgWhiteboardComponent],\n})\nexport class NgWhiteboardModule {}\n","/*\n * Public API Surface of ng-whiteboard\n */\n\nexport * from './lib/ng-whiteboard.service';\nexport * from './lib/ng-whiteboard.component';\nexport * from './lib/ng-whiteboard.module';\nexport * from './lib/models';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1.NgWhiteboardService"],"mappings":";;;;;;;AAAY,IAAA,gBAQX;AARD,CAAA,UAAY,eAAe,EAAA;AACzB,IAAA,eAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,eAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,eAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,eAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,eAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,eAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,eAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACjB,CAAC,EARW,eAAe,KAAf,eAAe,GAQ1B,EAAA,CAAA,CAAA;;ACRW,IAAA,YAIX;AAJD,CAAA,UAAY,WAAW,EAAA;AACrB,IAAA,WAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,WAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,WAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACjB,CAAC,EAJW,WAAW,KAAX,WAAW,GAItB,EAAA,CAAA,CAAA;;ACJW,IAAA,aAKX;AALD,CAAA,UAAY,YAAY,EAAA;AACtB,IAAA,YAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,YAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,YAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,YAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AAC3B,CAAC,EALW,YAAY,KAAZ,YAAY,GAKvB,EAAA,CAAA,CAAA;;ACLW,IAAA,UASX;AATD,CAAA,UAAY,SAAS,EAAA;AACnB,IAAA,SAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,SAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,SAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,SAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,SAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,SAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,SAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,SAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACnB,CAAC,EATW,SAAS,KAAT,SAAS,GASpB,EAAA,CAAA,CAAA;;MCLY,YAAY,CAAA;AAQvB,IAAA,WAAA,CAAY,OAAkC,EAAA;QAC5C,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,IAAI,CAAC,CAAC;QAC5C,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,IAAI,SAAS,CAAC;QACpD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,WAAW,CAAC,KAAK,CAAC;QACpD,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,IAAI,YAAY,CAAC,KAAK,CAAC;QACvD,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,IAAI,EAAE,CAAC;QACzC,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,IAAI,CAAC,CAAC;KAC3C;AACF;;MClBY,YAAY,CAAA;AAavB,IAAA,WAAA,CAAY,OAAkC,EAAA;QAC5C,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,CAAC,CAAC;QAChC,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,CAAC,CAAC;QAClC,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,IAAI,CAAC,CAAC;QAC5C,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,IAAI,SAAS,CAAC;QACpD,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,IAAI,EAAE,CAAC;QACzC,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,IAAI,SAAS,CAAC;KACvC;AACF;;MCnBY,WAAW,CAAA;AAYtB,IAAA,WAAA,CAAY,OAAkC,EAAA;QAC5C,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC;QAC1B,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC;QAC1B,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC;QAC1B,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC;QAC1B,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,IAAI,CAAC,CAAC;QAC5C,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,IAAI,SAAS,CAAC;QACpD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,WAAW,CAAC,KAAK,CAAC;QACpD,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,IAAI,YAAY,CAAC,KAAK,CAAC;QACvD,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,IAAI,EAAE,CAAC;QACzC,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,IAAI,CAAC,CAAC;KAC3C;AACF;;MCxBY,WAAW,CAAA;;;;;;AA0BtB,IAAA,WAAA,CAAY,OAAkC,EAAA;QAC5C,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,IAAI,CAAC,CAAC;QAC9B,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC;QAC5B,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,CAAC,CAAC;QAChC,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,CAAC,CAAC;QAClC,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,IAAI,OAAO,CAAC;QAChD,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,IAAI,EAAE,CAAC;QACvC,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,IAAI,QAAQ,CAAC;QAC/C,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,IAAI,QAAQ,CAAC;QACjD,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,IAAI,CAAC,CAAC;QAC5C,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,IAAI,SAAS,CAAC;QACpD,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,IAAI,SAAS,CAAC;QACtC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,IAAI,YAAY,CAAC,KAAK,CAAC;QACvD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,WAAW,CAAC,KAAK,CAAC;QACpD,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,IAAI,EAAE,CAAC;QACzC,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,IAAI,CAAC,CAAC;KAC3C;AACF;;MC3CY,cAAc,CAAA;AAczB,IAAA,WAAA,CAAY,OAAkC,EAAA;QAC5C,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC;QAC1B,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC;QAC1B,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC;QAC1B,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,IAAI,EAAE,CAAC;QACzC,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,IAAI,CAAC,CAAC;QAC1C,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,IAAI,CAAC,CAAC;QAC5C,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,IAAI,SAAS,CAAC;QACpD,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,IAAI,SAAS,CAAC;QACtC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,WAAW,CAAC,KAAK,CAAC;QACpD,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,IAAI,YAAY,CAAC,KAAK,CAAC;KACxD;AACF;;MC7BY,WAAW,CAAA;AAYtB,IAAA,WAAA,CAAY,OAAkC,EAAA;QAC5C,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,CAAC,CAAC;QAChC,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,CAAC,CAAC;QAClC,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC;QAC1B,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC;QAC1B,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC;QAC1B,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,IAAI,CAAC,CAAC;QAC5C,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,IAAI,SAAS,CAAC;QACpD,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,IAAI,SAAS,CAAC;QACtC,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,IAAI,EAAE,CAAC;QACzC,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,IAAI,CAAC,CAAC;KAC3C;AACF;;MCtBY,iBAAiB,CAAA;AAW5B,IAAA,WAAA,CAAY,IAAqB,EAAE,OAAkC,EAAE,KAAc,EAAA;AAPrF,QAAA,IAAC,CAAA,CAAA,GAAG,CAAC,CAAC;AACN,QAAA,IAAC,CAAA,CAAA,GAAG,CAAC,CAAC;AACN,QAAA,IAAQ,CAAA,QAAA,GAAG,CAAC,CAAC;AACb,QAAA,IAAO,CAAA,OAAA,GAAG,GAAG,CAAC;AAEd,QAAA,IAAO,CAAA,OAAA,GAA8B,EAAE,CAAC;AAGtC,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,QAAA,IAAI,CAAC,KAAK,GAAG,KAAK,IAAI,EAAE,CAAC;QACzB,IAAI,CAAC,EAAE,GAAG,CAAA,QAAA,EAAW,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;AAErE,QAAA,QAAQ,IAAI;YACV,KAAK,eAAe,CAAC,KAAK;gBACxB,IAAI,CAAC,OAAO,GAAG,IAAI,YAAY,CAAC,OAAO,CAAC,CAAC;gBACzC,MAAM;YACR,KAAK,eAAe,CAAC,KAAK;gBACxB,IAAI,CAAC,OAAO,GAAG,IAAI,YAAY,CAAC,OAAO,CAAC,CAAC;gBACzC,MAAM;YACR,KAAK,eAAe,CAAC,IAAI;gBACvB,IAAI,CAAC,OAAO,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC,CAAC;gBACxC,MAAM;YACR,KAAK,eAAe,CAAC,IAAI;gBACvB,IAAI,CAAC,OAAO,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC,CAAC;gBACxC,MAAM;YACR,KAAK,eAAe,CAAC,OAAO;gBAC1B,IAAI,CAAC,OAAO,GAAG,IAAI,cAAc,CAAC,OAAO,CAAC,CAAC;gBAC3C,MAAM;YACR,KAAK,eAAe,CAAC,IAAI;gBACvB,IAAI,CAAC,OAAO,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC,CAAC;gBACxC,MAAM;AACR,YAAA;AACE,gBAAA,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;gBAClB,MAAM;AACT,SAAA;KACF;AACF;;AC1CW,IAAA,WAKX;AALD,CAAA,UAAY,UAAU,EAAA;AACpB,IAAA,UAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACX,IAAA,UAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,UAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACX,IAAA,UAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACnB,CAAC,EALW,UAAU,KAAV,UAAU,GAKrB,EAAA,CAAA,CAAA;;MCAY,mBAAmB,CAAA;AAHhC,IAAA,WAAA,GAAA;;AAKU,QAAA,IAAA,CAAA,wBAAwB,GAAG,IAAI,OAAO,EAAQ,CAAC;AAC/C,QAAA,IAAA,CAAA,uBAAuB,GAAG,IAAI,OAAO,EAAyC,CAAC;AAC/E,QAAA,IAAA,CAAA,uBAAuB,GAAG,IAAI,OAAO,EAAQ,CAAC;AAC9C,QAAA,IAAA,CAAA,uBAAuB,GAAG,IAAI,OAAO,EAAQ,CAAC;AAC9C,QAAA,IAAA,CAAA,oBAAoB,GAAG,IAAI,OAAO,EAAQ,CAAC;AAC3C,QAAA,IAAA,CAAA,wBAAwB,GAAG,IAAI,OAAO,EAAa,CAAC;;QAG5D,IAAA,CAAA,qBAAqB,GAAG,IAAI,CAAC,wBAAwB,CAAC,YAAY,EAAE,CAAC;QACrE,IAAA,CAAA,oBAAoB,GAAG,IAAI,CAAC,uBAAuB,CAAC,YAAY,EAAE,CAAC;QACnE,IAAA,CAAA,oBAAoB,GAAG,IAAI,CAAC,uBAAuB,CAAC,YAAY,EAAE,CAAC;QACnE,IAAA,CAAA,oBAAoB,GAAG,IAAI,CAAC,uBAAuB,CAAC,YAAY,EAAE,CAAC;QACnE,IAAA,CAAA,qBAAqB,GAAG,IAAI,CAAC,oBAAoB,CAAC,YAAY,EAAE,CAAC;QAEjE,IAAA,CAAA,qBAAqB,GAAG,IAAI,CAAC,wBAAwB,CAAC,YAAY,EAAE,CAAC;KAqBtE;;IAlBQ,KAAK,GAAA;AACV,QAAA,IAAI,CAAC,wBAAwB,CAAC,IAAI,EAAE,CAAC;KACtC;IACM,IAAI,CAAC,MAAsB,GAAA,UAAU,CAAC,MAAM,EAAE,OAAe,WAAW,EAAA;QAC7E,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;KACrD;IACM,IAAI,GAAA;AACT,QAAA,IAAI,CAAC,uBAAuB,CAAC,IAAI,EAAE,CAAC;KACrC;IACM,IAAI,GAAA;AACT,QAAA,IAAI,CAAC,uBAAuB,CAAC,IAAI,EAAE,CAAC;KACrC;IACM,KAAK,GAAA;AACV,QAAA,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,CAAC;KAClC;AACM,IAAA,QAAQ,CAAC,KAA2B,EAAE,CAAU,EAAE,CAAU,EAAA;AACjE,QAAA,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;KACrD;;gHApCU,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,cAFlB,MAAM,EAAA,CAAA,CAAA;2FAEP,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAH/B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACED,MAAM,MAAM,GAAG,IAAI,EAAE,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;MAM3B,qBAAqB,CAAA;AAsFhC,IAAA,WAAA,CAAoB,iBAAsC,EAAA;AAAtC,QAAA,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAqB;QAjFlD,IAAA,CAAA,KAAK,GAAyC,IAAI,eAAe,CAAsB,EAAE,CAAC,CAAC;AAuB1F,QAAA,IAAc,CAAA,cAAA,GAAG,IAAI,CAAC;AACtB,QAAA,IAAW,CAAA,WAAA,GAAG,GAAG,CAAC;AAClB,QAAA,IAAY,CAAA,YAAA,GAAG,GAAG,CAAC;AACnB,QAAA,IAAU,CAAA,UAAA,GAAG,IAAI,CAAC;AAClB,QAAA,IAAM,CAAA,MAAA,GAAG,IAAI,CAAC;AACd,QAAA,IAAW,CAAA,WAAA,GAAG,MAAM,CAAC;AACrB,QAAA,IAAW,CAAA,WAAA,GAAG,CAAC,CAAC;AAChB,QAAA,IAAe,CAAA,eAAA,GAAG,MAAM,CAAC;AACzB,QAAA,IAAA,CAAA,QAAQ,GAAG,YAAY,CAAC,KAAK,CAAC;AAC9B,QAAA,IAAA,CAAA,OAAO,GAAG,WAAW,CAAC,KAAK,CAAC;AAC5B,QAAA,IAAI,CAAA,IAAA,GAAG,MAAM,CAAC;AACd,QAAA,IAAI,CAAA,IAAA,GAAG,CAAC,CAAC;AACT,QAAA,IAAU,CAAA,UAAA,GAAG,YAAY,CAAC;AAC1B,QAAA,IAAQ,CAAA,QAAA,GAAG,EAAE,CAAC;AACd,QAAA,IAAS,CAAA,SAAA,GAAG,EAAE,CAAC;AACf,QAAA,IAAU,CAAA,UAAA,GAAG,CAAC,CAAC;AACf,QAAA,IAAC,CAAA,CAAA,GAAG,CAAC,CAAC;AACN,QAAA,IAAC,CAAA,CAAA,GAAG,CAAC,CAAC;AACN,QAAA,IAAU,CAAA,UAAA,GAAG,KAAK,CAAC;AACnB,QAAA,IAAQ,CAAA,QAAA,GAAG,EAAE,CAAC;AACd,QAAA,IAAU,CAAA,UAAA,GAAG,KAAK,CAAC;AACnB,QAAA,IAAa,CAAA,aAAA,GAAqB,SAAS,CAAC;AAE3C,QAAA,IAAA,CAAA,KAAK,GAAG,IAAI,YAAY,EAAE,CAAC;AAC3B,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,YAAY,EAAuB,CAAC;AACrD,QAAA,IAAA,CAAA,KAAK,GAAG,IAAI,YAAY,EAAE,CAAC;AAC3B,QAAA,IAAA,CAAA,IAAI,GAAG,IAAI,YAAY,EAAE,CAAC;AAC1B,QAAA,IAAA,CAAA,IAAI,GAAG,IAAI,YAAY,EAAE,CAAC;AAC1B,QAAA,IAAA,CAAA,IAAI,GAAG,IAAI,YAAY,EAAU,CAAC;AAClC,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,YAAY,EAAE,CAAC;AAChC,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,YAAY,EAA4B,CAAC;AAC7D,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,YAAY,EAAqB,CAAC;AACtD,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,YAAY,EAAa,CAAC;AAI9C,QAAA,IAAiB,CAAA,iBAAA,GAAmB,EAAE,CAAC;AAEvC,QAAA,IAAY,CAAA,YAAA,GAAwB,EAAE,CAAC;AACvC,QAAA,IAAS,CAAA,SAAA,GAA0B,EAAE,CAAC;AACtC,QAAA,IAAS,CAAA,SAAA,GAA0B,EAAE,CAAC;AACtC,QAAA,IAAA,CAAA,aAAa,GAAc,SAAS,CAAC,KAAK,CAAC;AAGnD,QAAA,IAAK,CAAA,KAAA,GAAG,eAAe,CAAC;AACxB,QAAA,IAAK,CAAA,KAAA,GAAG,SAAS,CAAC;QAKlB,IAAA,CAAA,SAAS,GAAG;AACV,YAAA,CAAC,EAAE,CAAC;AACJ,YAAA,CAAC,EAAE,CAAC;AACJ,YAAA,KAAK,EAAE,CAAC;AACR,YAAA,MAAM,EAAE,CAAC;AACT,YAAA,OAAO,EAAE,MAAM;SAChB,CAAC;KAE4D;IA/E9D,IAAa,IAAI,CAAC,IAAyB,EAAA;AACzC,QAAA,IAAI,IAAI,EAAE;AACR,YAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACvB,SAAA;KACF;AACD,IAAA,IAAI,IAAI,GAAA;AACN,QAAA,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;KAC9B;IAID,IAAa,YAAY,CAAC,IAAe,EAAA;AACvC,QAAA,IAAI,IAAI,CAAC,aAAa,KAAK,IAAI,EAAE;AAC/B,YAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;AAC1B,YAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC5B,IAAI,CAAC,oBAAoB,EAAE,CAAC;AAC7B,SAAA;KACF;AACD,IAAA,IAAI,YAAY,GAAA;QACd,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;IA6DD,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC1C,IAAI,CAAC,gBAAgB,EAAE,CAAC;AACxB,QAAA,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC1D,IAAI,IAAI,CAAC,aAAa,EAAE;AACtB,YAAA,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,CAAc,WAAA,EAAA,IAAI,CAAC,aAAa,CAAA,CAAE,CAAC,IAAE,MAAM,CAAC,CAAC;AAC5F,YAAA,IAAI,MAAM,EAAE;gBACV,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;gBACnC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,IAAI,EAAE,CAAC;gBACxC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,IAAI,EAAE,CAAC;AACzC,aAAA;AACF,SAAA;KACF;AAED,IAAA,WAAW,CAAC,OAAsB,EAAA;AAChC,QAAA,IAAI,OAAO,CAAC,SAAS,CAAC,EAAE;;YAEtB,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,YAAY,CAAC,CAAC;AAC9D,SAAA;KACF;IAED,eAAe,GAAA;QACb,IAAI,CAAC,SAAS,GAAG,MAAM,CAAmB,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;QAC3E,UAAU,CAAC,MAAK;YACd,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB,EAAE,CAAC,CAAC,CAAC;AACN,QAAA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACrC,QAAA,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;KACnB;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,YAAY,KAAK,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,CAAC;KACnF;AAEO,IAAA,sBAAsB,CAAC,OAA0B,EAAA;AACvD,QAAA,IAAI,OAAO,EAAE;AACX,YAAA,IAAI,OAAO,CAAC,cAAc,IAAI,SAAS,EAAE;AACvC,gBAAA,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC,cAAc,CAAC;AAC9C,aAAA;AACD,YAAA,IAAI,OAAO,CAAC,YAAY,IAAI,SAAS,EAAE;AACrC,gBAAA,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;AAC1C,aAAA;AACD,YAAA,IAAI,OAAO,CAAC,WAAW,IAAI,SAAS,EAAE;AACpC,gBAAA,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;AACxC,aAAA;AACD,YAAA,IAAI,OAAO,CAAC,YAAY,IAAI,SAAS,EAAE;AACrC,gBAAA,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;AAC1C,aAAA;AACD,YAAA,IAAI,OAAO,CAAC,UAAU,IAAI,SAAS,EAAE;AACnC,gBAAA,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;AACtC,aAAA;AACD,YAAA,IAAI,OAAO,CAAC,MAAM,IAAI,SAAS,EAAE;AAC/B,gBAAA,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;AAC9B,aAAA;AACD,YAAA,IAAI,OAAO,CAAC,WAAW,IAAI,SAAS,EAAE;AACpC,gBAAA,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;AACxC,aAAA;AACD,YAAA,IAAI,OAAO,CAAC,WAAW,IAAI,SAAS,EAAE;AACpC,gBAAA,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;AACxC,aAAA;AACD,YAAA,IAAI,OAAO,CAAC,eAAe,IAAI,SAAS,EAAE;AACxC,gBAAA,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC,eAAe,CAAC;AAChD,aAAA;AACD,YAAA,IAAI,OAAO,CAAC,QAAQ,IAAI,SAAS,EAAE;AACjC,gBAAA,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;AAClC,aAAA;AACD,YAAA,IAAI,OAAO,CAAC,OAAO,IAAI,SAAS,EAAE;AAChC,gBAAA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;AAChC,aAAA;AACD,YAAA,IAAI,OAAO,CAAC,IAAI,IAAI,SAAS,EAAE;AAC7B,gBAAA,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;AAC1B,aAAA;AACD,YAAA,IAAI,OAAO,CAAC,IAAI,IAAI,SAAS,EAAE;AAC7B,gBAAA,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;AAC1B,aAAA;AACD,YAAA,IAAI,OAAO,CAAC,UAAU,IAAI,SAAS,EAAE;AACnC,gBAAA,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;AACtC,aAAA;AACD,YAAA,IAAI,OAAO,CAAC,QAAQ,IAAI,SAAS,EAAE;AACjC,gBAAA,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;AAClC,aAAA;AACD,YAAA,IAAI,OAAO,CAAC,SAAS,IAAI,SAAS,EAAE;AAClC,gBAAA,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;AACpC,aAAA;AACD,YAAA,IAAI,OAAO,CAAC,UAAU,IAAI,SAAS,EAAE;AACnC,gBAAA,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;AACtC,aAAA;AACD,YAAA,IAAI,OAAO,CAAC,CAAC,IAAI,SAAS,EAAE;AAC1B,gBAAA,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC;AACpB,aAAA;AACD,YAAA,IAAI,OAAO,CAAC,CAAC,IAAI,SAAS,EAAE;AAC1B,gBAAA,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC;AACpB,aAAA;AACD,YAAA,IAAI,OAAO,CAAC,UAAU,IAAI,SAAS,EAAE;AACnC,gBAAA,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;AACtC,aAAA;AACD,YAAA,IAAI,OAAO,CAAC,QAAQ,IAAI,SAAS,EAAE;AACjC,gBAAA,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;AAClC,aAAA;AACD,YAAA,IAAI,OAAO,CAAC,UAAU,IAAI,SAAS,EAAE;AACnC,gBAAA,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;AACtC,aAAA;AACD,YAAA,IAAI,OAAO,CAAC,aAAa,IAAI,SAAS,EAAE;AACtC,gBAAA,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,aAAa,CAAC;AAC5C,aAAA;AACF,SAAA;KACF;IAEO,gBAAgB,GAAA;AACtB,QAAA,IAAI,CAAC,iBAAiB,CAAC,IAAI,CACzB,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CACxG,CAAC;QACF,IAAI,CAAC,iBAAiB,CAAC,IAAI,CACzB,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAC/F,CAAC;QACF,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;QAC5G,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QACzG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QAC1G,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QAC1G,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;QAC9F,IAAI,CAAC,iBAAiB,CAAC,IAAI,CACzB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,KAAI;AAC1C,YAAA,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,CAAc,WAAA,EAAA,IAAI,CAAC,aAAa,CAAA,CAAE,CAAC,IAAE,EAAE,CAAC,CAAC;AACtF,YAAA,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;AACnB,YAAA,YAAY,CAAC,OAAO,CAAC,CAAc,WAAA,EAAA,IAAI,CAAC,aAAa,CAAA,CAAE,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;AACjF,YAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC5B,CAAC,CACH,CAAC;KACH;AAED,IAAA,eAAe,CAAC,SAAuD,EAAA;AACrE,QAAA,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;YACxB,OAAO;AACR,SAAA;QACD,IAAI,QAAQ,GAAG,KAAK,CAAC;AAErB,QAAA,SAAS,CAAC,IAAI,CACZ,IAAI,EAAE;AACH,aAAA,EAAE,CAAC,OAAO,EAAE,MAAK;YAChB,QAAQ,GAAG,IAAI,CAAC;AAChB,YAAA,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;YACpB,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAC1B,SAAC,CAAC;AACD,aAAA,EAAE,CAAC,MAAM,EAAE,MAAK;YACf,IAAI,CAAC,QAAQ,EAAE;gBACb,OAAO;AACR,aAAA;YACD,IAAI,CAAC,eAAe,EAAE,CAAC;AACzB,SAAC,CAAC;AACD,aAAA,EAAE,CAAC,KAAK,EAAE,MAAK;YACd,QAAQ,GAAG,KAAK,CAAC;YACjB,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB,CAAC,CACL,CAAC;KACH;IAED,gBAAgB,GAAA;QACd,QAAQ,IAAI,CAAC,YAAY;YACvB,KAAK,SAAS,CAAC,KAAK;gBAClB,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,MAAM;YACR,KAAK,SAAS,CAAC,KAAK;gBAClB,IAAI,CAAC,eAAe,EAAE,CAAC;gBACvB,MAAM;YACR,KAAK,SAAS,CAAC,IAAI;gBACjB,IAAI,CAAC,eAAe,EAAE,CAAC;gBACvB,MAAM;YACR,KAAK,SAAS,CAAC,IAAI;gBACjB,IAAI,CAAC,eAAe,EAAE,CAAC;gBACvB,MAAM;YACR,KAAK,SAAS,CAAC,OAAO;gBACpB,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBAC1B,MAAM;YACR,KAAK,SAAS,CAAC,IAAI;gBACjB,IAAI,CAAC,cAAc,EAAE,CAAC;gBACtB,MAAM;YACR,KAAK,SAAS,CAAC,MAAM;gBACnB,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,MAAM;YACR,KAAK,SAAS,CAAC,MAAM;gBACnB,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,MAAM;AACR,YAAA;gBACE,MAAM;AACT,SAAA;KACF;IACD,eAAe,GAAA;QACb,QAAQ,IAAI,CAAC,YAAY;YACvB,KAAK,SAAS,CAAC,KAAK;gBAClB,IAAI,CAAC,eAAe,EAAE,CAAC;gBACvB,MAAM;YACR,KAAK,SAAS,CAAC,IAAI;gBACjB,IAAI,CAAC,cAAc,EAAE,CAAC;gBACtB,MAAM;YACR,KAAK,SAAS,CAAC,IAAI;gBACjB,IAAI,CAAC,cAAc,EAAE,CAAC;gBACtB,MAAM;YACR,KAAK,SAAS,CAAC,OAAO;gBACpB,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACzB,MAAM;YACR,KAAK,SAAS,CAAC,IAAI;gBACjB,IAAI,CAAC,cAAc,EAAE,CAAC;gBACtB,MAAM;AACR,YAAA;gBACE,MAAM;AACT,SAAA;KACF;IACD,cAAc,GAAA;QACZ,QAAQ,IAAI,CAAC,YAAY;YACvB,KAAK,SAAS,CAAC,KAAK;gBAClB,IAAI,CAAC,cAAc,EAAE,CAAC;gBACtB,MAAM;YACR,KAAK,SAAS,CAAC,IAAI;gBACjB,IAAI,CAAC,aAAa,EAAE,CAAC;gBACrB,MAAM;YACR,KAAK,SAAS,CAAC,IAAI;gBACjB,IAAI,CAAC,aAAa,EAAE,CAAC;gBACrB,MAAM;YACR,KAAK,SAAS,CAAC,OAAO;gBACpB,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,MAAM;YACR,KAAK,SAAS,CAAC,IAAI;gBACjB,IAAI,CAAC,aAAa,EAAE,CAAC;gBACrB,MAAM;AACR,YAAA;gBACE,MAAM;AACT,SAAA;KACF;;IAED,gBAAgB,GAAA;QACd,MAAM,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;AAChE,QAAA,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAmB,CAAC,CAAC,CAAC,CAAC;QACtF,OAAO,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAW,CAAC;QAChD,OAAO,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;AAC/C,QAAA,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;KAC5B;IACD,eAAe,GAAA;QACb,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAmB,CAAC,CAAC,CAAC,CAAC;QACxF,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAW,CAAC;KAC1D;IACD,cAAc,GAAA;QACZ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAmB,CAAC,CAAC,CAAC,CAAC;QACxF,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAW,CAAC;AACzD,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACnC,IAAI,CAAC,WAAW,EAAE,CAAC;AACnB,QAAA,IAAI,CAAC,QAAQ,GAAG,IAAa,CAAC;AAC9B,QAAA,IAAI,CAAC,WAAW,GAAG,IAAa,CAAC;KAClC;;IAED,eAAe,GAAA;QACb,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAmB,CAAC,CAAC,CAAC;QACnF,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;AAC9C,QAAA,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC;AACpB,QAAA,KAAK,CAAC,MAAM,GAAG,SAAS,CAAC;AACzB,QAAA,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC,KAAI;AACrB,YAAA,MAAM,KAAK,GAAI,CAAC,CAAC,MAA2B,CAAC,KAAK,CAAC;AACnD,YAAA,IAAI,KAAK,EAAE;AACT,gBAAA,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;AAChC,gBAAA,MAAM,CAAC,MAAM,GAAG,CAAC,CAAgB,KAAI;AACnC,oBAAA,MAAM,KAAK,GAAI,CAAC,CAAC,MAAqB,CAAC,MAAgB,CAAC;oBACxD,IAAI,CAAC,eAAe,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AACxC,iBAAC,CAAC;gBACF,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,aAAA;AACH,SAAC,CAAC;QACF,KAAK,CAAC,KAAK,EAAE,CAAC;KACf;;AAED,IAAA,eAAe,CAAC,QAAmB,EAAA;QACjC,IAAI;AACF,YAAA,MAAM,OAAO,GAAG,IAAI,KAAK,EAAE,CAAC;AAC5B,YAAA,OAAO,CAAC,MAAM,GAAG,MAAK;AACpB,gBAAA,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC;AACpC,gBAAA,MAAM,UAAU,GAAG,OAAO,CAAC,KAAK,CAAC;AACjC,gBAAA,MAAM,WAAW,GAAG,OAAO,CAAC,MAAM,CAAC;gBACnC,MAAM,WAAW,GAAG,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC;AACnD,gBAAA,MAAM,MAAM,GAAG,WAAW,GAAG,SAAS,GAAG,SAAS,GAAG,EAAE,GAAG,WAAW,CAAC;gBACtE,MAAM,KAAK,GAAG,MAAM,KAAK,SAAS,GAAG,EAAE,GAAG,CAAC,SAAS,GAAG,EAAE,IAAI,WAAW,GAAG,UAAU,CAAC;AAEtF,gBAAA,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,KAAK,KAAK,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAC/D,gBAAA,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC,IAAI,CAAC,WAAW,GAAG,MAAM,KAAK,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBAEjE,IAAI,CAAC,GAAG,CAAC,EAAE;oBACT,CAAC,GAAG,CAAC,CAAC;AACP,iBAAA;gBACD,IAAI,CAAC,GAAG,CAAC,EAAE;oBACT,CAAC,GAAG,CAAC,CAAC;AACP,iBAAA;gBAED,MAAM,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;AAChE,gBAAA,OAAO,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAe,CAAC;AACzC,gBAAA,OAAO,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;AAC9B,gBAAA,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;AAChC,gBAAA,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;AACd,gBAAA,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;AACd,gBAAA,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;AAC1B,gBAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;gBACvB,IAAI,CAAC,WAAW,EAAE,CAAC;AACrB,aAAC,CAAC;AACF,YAAA,OAAO,CAAC,GAAG,GAAG,QAAQ,CAAC,KAAe,CAAC;AACxC,SAAA;AAAC,QAAA,OAAO,KAAK,EAAE;AACd,YAAA,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACtB,SAAA;KACF;;IAED,eAAe,GAAA;QACb,MAAM,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAC/D,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAmB,CAAC,CAAC,CAAC;QAEjF,IAAI,IAAI,CAAC,UAAU,EAAE;AACnB,YAAA,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;AACxB,YAAA,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;AACzB,SAAA;AAED,QAAA,OAAO,CAAC,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC;AACvB,QAAA,OAAO,CAAC,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC;AACvB,QAAA,OAAO,CAAC,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC;AACvB,QAAA,OAAO,CAAC,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC;AACvB,QAAA,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;KAC5B;IACD,cAAc,GAAA;QACZ,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAmB,CAAC,CAAC,CAAC;QAEnF,IAAI,IAAI,CAAC,UAAU,EAAE;AACnB,YAAA,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;AAC1B,YAAA,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;AAC3B,SAAA;AAED,QAAA,IAAI,KAAK,CAAC,WAAW,CAAC,QAAQ,EAAE;YAC9B,MAAM,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAY,CAAC;YACjD,MAAM,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAY,CAAC;AACjD,YAAA,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;YACnD,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACnB,SAAA;QAED,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC;QACjC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC;KAClC;IACD,aAAa,GAAA;AACX,QAAA,IACE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE;AAC1D,YAAA,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,EAC1D;AACA,YAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACnC,IAAI,CAAC,WAAW,EAAE,CAAC;AACnB,YAAA,IAAI,CAAC,WAAW,GAAG,IAAa,CAAC;AAClC,SAAA;KACF;;IAED,eAAe,GAAA;QACb,MAAM,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAC/D,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAmB,CAAC,CAAC,CAAC;QACjF,IAAI,IAAI,CAAC,UAAU,EAAE;AACnB,YAAA,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;AACxB,YAAA,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;AACzB,SAAA;AACD,QAAA,OAAO,CAAC,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC;AACvB,QAAA,OAAO,CAAC,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC;AACvB,QAAA,OAAO,CAAC,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC;AACvB,QAAA,OAAO,CAAC,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC;AACvB,QAAA,OAAO,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC;AAC1B,QAAA,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;AAC3B,QAAA,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;KAC5B;IACD,cAAc,GAAA;QACZ,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAmB,CAAC,CAAC,CAAC;QACnF,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC;QACjD,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC;QACjD,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC;QAC9B,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC;QAC9B,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,KAAK,GAAG,IAAI,CAAC;AAEjB,QAAA,IAAI,KAAK,CAAC,WAAW,CAAC,QAAQ,EAAE;YAC9B,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACvB,YAAA,KAAK,GAAG,OAAO,GAAG,CAAC,GAAG,OAAO,GAAG,OAAO,GAAG,CAAC,CAAC;AAC5C,YAAA,KAAK,GAAG,OAAO,GAAG,CAAC,GAAG,OAAO,GAAG,OAAO,GAAG,CAAC,CAAC;AAC7C,SAAA;AAAM,aAAA;YACL,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;YAC7B,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;AAC9B,SAAA;AACD,QAAA,IAAI,KAAK,CAAC,WAAW,CAAC,MAAM,EAAE;YAC5B,CAAC,IAAI,CAAC,CAAC;YACP,CAAC,IAAI,CAAC,CAAC;AACP,YAAA,KAAK,GAAG,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;AACxB,YAAA,KAAK,GAAG,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;AACzB,SAAA;QACD,IAAI,IAAI,CAAC,UAAU,EAAE;AACnB,YAAA,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;AACxB,YAAA,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;AACxB,YAAA,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AAChC,YAAA,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AACjC,SAAA;QAED,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC;QACnC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;QACpC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,GAAG,KAAK,CAAC;QACpC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,GAAG,KAAK,CAAC;KACrC;IACD,aAAa,GAAA;AACX,QAAA,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,EAAE;AAC/E,YAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACnC,IAAI,CAAC,WAAW,EAAE,CAAC;AACnB,YAAA,IAAI,CAAC,WAAW,GAAG,IAAa,CAAC;AAClC,SAAA;KACF;;IAED,kBAAkB,GAAA;QAChB,MAAM,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QAClE,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAmB,CAAC,CAAC,CAAC;;AAGnF,QAAA,OAAO,CAAC,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC;AACvB,QAAA,OAAO,CAAC,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC;AAEvB,QAAA,OAAO,CAAC,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC;AACvB,QAAA,OAAO,CAAC,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC;AACvB,QAAA,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;KAC5B;IACD,iBAAiB,GAAA;QACf,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAmB,CAAC,CAAC,CAAC;QACnF,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC;QACjD,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC;AACjD,QAAA,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,OAAO,IAAI,CAAC,CAAC,CAAC;AAC/C,QAAA,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,OAAO,IAAI,CAAC,CAAC,CAAC;QAC/C,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC;QAChC,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC;AAEhC,QAAA,IAAI,KAAK,CAAC,WAAW,CAAC,QAAQ,EAAE;YAC9B,EAAE,GAAG,EAAE,CAAC;AACR,YAAA,EAAE,GAAG,CAAC,GAAG,OAAO,GAAG,OAAO,GAAG,EAAE,GAAG,OAAO,GAAG,EAAE,CAAC;AAChD,SAAA;AACD,QAAA,IAAI,KAAK,CAAC,WAAW,CAAC,MAAM,EAAE;YAC5B,EAAE,GAAG,OAAO,CAAC;YACb,EAAE,GAAG,OAAO,CAAC;YACb,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;YACtB,EAAE,GAAG,KAAK,CAAC,WAAW,CAAC,QAAQ,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;AACzD,SAAA;QAED,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC;QACjC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC;QACjC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC;QACjC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC;KAClC;IACD,gBAAgB,GAAA;AACd,QAAA,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,EAAE;AACxE,YAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACnC,IAAI,CAAC,WAAW,EAAE,CAAC;AACnB,YAAA,IAAI,CAAC,WAAW,GAAG,IAAa,CAAC;AAClC,SAAA;KACF;;IAED,cAAc,GAAA;QACZ,IAAI,IAAI,CAAC,WAAW,EAAE;;YAEpB,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,OAAO;AACR,SAAA;QACD,MAAM,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAC/D,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAmB,CAAC,CAAC,CAAC;AACnF,QAAA,OAAO,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC,CAAC;AACxB,QAAA,OAAO,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC,CAAC;AACzB,QAAA,OAAO,CAAC,OAAO,CAAC,WAAW,GAAG,CAAC,CAAC;AAChC,QAAA,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;QAC3B,UAAU,CAAC,MAAK;AACd,YAAA,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;SACtC,EAAE,CAAC,CAAC,CAAC;KACP;IACD,cAAc,GAAA;AACZ,QAAA,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,OAAO;AACR,SAAA;QACD,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAmB,CAAC,CAAC,CAAC;QACnF,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC,CAAC;QACjC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC,CAAC;KACnC;IACD,aAAa,GAAA;AACX,QAAA,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,OAAO;AACR,SAAA;QACD,IAAI,CAAC,WAAW,EAAE,CAAC;KACpB;;IAED,gBAAgB,GAAA;AACd,QAAA,MAAM,YAAY,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;AAC5C,QAAA,IAAI,YAAY,EAAE;AAChB,YAAA,IAAI,YAAY,CAAC,EAAE,KAAK,eAAe,EAAE;gBACvC,OAAO;AACR,aAAA;YACD,MAAM,EAAE,GAAG,YAAY,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;AACnD,YAAA,MAAM,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAsB,CAAC;AAClF,YAAA,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,CAAC;AAC1C,SAAA;AAAM,aAAA;YACL,IAAI,CAAC,oBAAoB,EAAE,CAAC;AAC7B,SAAA;KACF;;IAED,gBAAgB,GAAA;AACd,QAAA,MAAM,YAAY,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;AAC5C,QAAA,IAAI,YAAY,EAAE;YAChB,MAAM,EAAE,GAAG,YAAY,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;AACnD,YAAA,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAsB,CAAC;AAC1E,YAAA,IAAI,OAAO,EAAE;gBACX,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;gBACnD,IAAI,CAAC,WAAW,EAAE,CAAC;AACnB,gBAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAClC,aAAA;AACF,SAAA;KACF;;;IAGD,eAAe,GAAA;QACb,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC;AACjD,QAAA,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,KAAK,CAAC;AAC/B,QAAA,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;AAC1B,YAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACnC,IAAI,CAAC,WAAW,EAAE,CAAC;AACpB,SAAA;AACD,QAAA,IAAI,CAAC,WAAW,GAAG,IAAa,CAAC;KAClC;;AAED,IAAA,cAAc,CAAC,KAAa,EAAA;QAC1B,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,YAAY,IAAI,SAAS,CAAC,IAAI,EAAE;AAC3D,YAAA,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,KAAK,CAAC;AAChC,SAAA;KACF;AACD,IAAA,kBAAkB,CAAC,OAA0B,EAAA;AAC3C,QAAA,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC,MAAM,CAAC;QACrC,MAAM,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;AAClD,QAAA,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC;AAC/B,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACjC,QAAA,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;KAC9B;IACD,oBAAoB,GAAA;AAClB,QAAA,IAAI,CAAC,eAAe,GAAG,IAAa,CAAC;AACrC,QAAA,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,MAAM,CAAC;AAChC,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC/B;IACO,OAAO,CAAC,IAAY,EAAE,MAAmB,EAAA;AAC/C,QAAA,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACnE,SAAS,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC,MAAM,EAAE,CAAC;AACjD,QAAA,SAAS,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC,IAAI,EAAoB,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;AAC5F,QAAA,MAAM,GAAG,GAAG,SAAS,CAAC,IAAI,EAAmB,CAAC;AAC9C,QAAA,GAAG,CAAC,YAAY,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC3B,QAAA,GAAG,CAAC,YAAY,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAE3B,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,GAAc,CAAC,CAAC;AACjD,QAAA,QAAQ,MAAM;YACZ,KAAK,UAAU,CAAC,MAAM;AACpB,gBAAA,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,EAAE,MAAM,EAAE,CAAC,GAAG,KAAI;AACnF,oBAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACtB,iBAAC,CAAC,CAAC;gBACH,MAAM;AACR,YAAA,KAAK,UAAU,CAAC,GAAG,EAAE;AACnB,gBAAA,MAAM,MAAM,GAAG,4BAA4B,GAAG,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AAC5F,gBAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AAC5B,gBAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACvB,MAAM;AACP,aAAA;AACD,YAAA;AACE,gBAAA,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,EAAE,MAAM,EAAE,CAAC,GAAG,KAAI;AACnF,oBAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AACzB,oBAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACtB,iBAAC,CAAC,CAAC;gBACH,MAAM;AACT,SAAA;QACD,SAAS,CAAC,MAAM,EAAE,CAAC;KACpB;IACO,eAAe,CACrB,SAAiB,EACjB,KAAa,EACb,MAAc,EACd,MAAc,EACd,QAA+B,EAAA;;AAG/B,QAAA,MAAM,GAAG,MAAM,IAAI,KAAK,CAAC;;AAEzB,QAAA,MAAM,OAAO,GAAG,4BAA4B,GAAG,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;;QAE7F,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;;QAEhD,MAAM,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAA6B,CAAC;;AAEpE,QAAA,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;AACrB,QAAA,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;;AAEvB,QAAA,MAAM,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;;AAE1B,QAAA,KAAK,CAAC,MAAM,GAAG,MAAK;;;YAGlB,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;;AAEvC,YAAA,OAAO,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;;YAE9C,MAAM,OAAO,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,GAAG,MAAM,CAAC,CAAC;;YAEpD,QAAQ,CAAC,OAAO,CAAC,CAAC;SACnB,CAAC;;AAEF,QAAA,KAAK,CAAC,GAAG,GAAG,OAAO,CAAC;KACrB;AACO,IAAA,SAAS,CAAC,OAAgB,EAAA;AAChC,QAAA,MAAM,UAAU,GAAG,IAAI,aAAa,EAAE,CAAC;QACvC,IAAI,SAAS,GAAG,UAAU,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;QACtD,SAAS,GAAG,SAAS,CAAC,OAAO,CAAC,iBAAiB,EAAE,cAAc,CAAC,CAAC;QACjE,SAAS,GAAG,SAAS,CAAC,OAAO,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC;AAC3D,QAAA,OAAO,SAAS,CAAC;KAClB;IACO,QAAQ,CAAC,GAAW,EAAE,IAAY,EAAA;QACxC,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;AACzC,QAAA,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;AAChB,QAAA,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;AAC1C,QAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,IAAI,iBAAiB,CAAC;AAC1C,QAAA,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAChC,IAAI,CAAC,KAAK,EAAE,CAAC;KACd;AACO,IAAA,WAAW,CAAC,OAA0B,EAAA;AAC5C,QAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACxB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC5B;IACO,SAAS,GAAA;AACf,QAAA,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,IAAI,CAAC,WAAW,EAAE,CAAC;AACnB,QAAA,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;KACnB;IACO,QAAQ,GAAA;AACd,QAAA,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;YAC1B,OAAO;AACR,SAAA;QACD,MAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;AAC1C,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAmC,CAAC,CAAC;AACzD,QAAA,IAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAC;YACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjF,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,EAAE,CAAC;AACjE,SAAA;QACD,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC1B,QAAA,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;KAClB;IACO,QAAQ,GAAA;AACd,QAAA,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;YAC1B,OAAO;AACR,SAAA;QACD,MAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;AAC1C,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAwB,CAAC,CAAC;AACrF,QAAA,IAAI,CAAC,IAAI,GAAG,YAAY,IAAI,EAAE,CAAC;QAC/B,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC1B,QAAA,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;KAClB;IACO,WAAW,GAAA;AACjB,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC3D,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAC3B;IACO,MAAM,GAAA;AACZ,QAAA,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;AACpB,QAAA,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;AACpB,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC;QAC9B,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAC3B;IACO,kBAAkB,GAAA;QACxB,MAAM,aAAa,GAAG,EAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAC,CAAC;AAC9F,QAAA,YAAY,CAAC,OAAO,CAAC,CAAc,WAAA,EAAA,IAAI,CAAC,aAAa,CAAA,CAAE,EAAE,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC;KACzF;AACO,IAAA,mBAAmB,CAAC,IAAqB,EAAA;AAC/C,QAAA,MAAM,OAAO,GAAG,IAAI,iBAAiB,CAAC,IAAI,EAAE;YAC1C,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,UAAU,EAAE,IAAI,CAAC,UAAU;AAC5B,SAAA,CAAC,CAAC;AACH,QAAA,OAAO,OAAO,CAAC;KAChB;AACO,IAAA,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,CAAmB,EAAA;QAC9C,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;KAC7D;IACO,YAAY,GAAA;AAClB,QAAA,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC;QACrD,IAAI,IAAI,CAAC,UAAU,EAAE;AACnB,YAAA,IAAI,CAAC,WAAW,GAAG,YAAY,CAAC,WAAW,CAAC;AAC5C,YAAA,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC,YAAY,CAAC;AAC/C,SAAA;QACD,IAAI,IAAI,CAAC,MAAM,EAAE;AACf,YAAA,IAAI,CAAC,CAAC,GAAG,YAAY,CAAC,WAAW,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;AAC7D,YAAA,IAAI,CAAC,CAAC,GAAG,YAAY,CAAC,YAAY,GAAG,CAAC,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;AAChE,SAAA;KACF;AACO,IAAA,YAAY,CAAC,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAA;QACjE,MAAM,IAAI,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;AACzB,QAAA,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;AACnB,QAAA,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;QACnB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AACjC,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;AAC1C,QAAA,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;AAClD,QAAA,MAAM,CAAC,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AAC1C,QAAA,MAAM,CAAC,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AAC1C,QAAA,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC;KACrC;AACO,IAAA,WAAW,CAAC,CAAS,EAAA;AAC3B,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC;AAC3B,QAAA,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;AACvC,QAAA,OAAO,EAAE,CAAC;KACX;AACO,IAAA,eAAe,CAAC,OAA0B,EAAA;AAChD,QAAA,MAAM,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAS,MAAA,EAAA,OAAO,CAAC,EAAE,CAAA,CAAE,CAAC,CAAC,IAAI,EAAwB,CAAC;AACrF,QAAA,MAAM,IAAI,GAAG,EAAE,CAAC,OAAO,EAAE,CAAC;AAC1B,QAAA,OAAO,IAAI,CAAC;KACb;IACO,eAAe,GAAA;AACrB,QAAA,MAAM,GAAG,GAAU,KAAK,CAAC,WAAW,CAAC;QACrC,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,CAAC,MAAM,IAAI,IAAI,EAAE;AACrC,YAAA,OAAO,IAAI,CAAC;AACb,SAAA;AACD,QAAA,IAAI,YAAY,GAAG,GAAG,CAAC,MAA4B,CAAC;AACpD,QAAA,IAAI,YAAY,CAAC,EAAE,KAAK,SAAS,EAAE;AACjC,YAAA,OAAO,IAAI,CAAC;AACb,SAAA;QACD,IAAI,YAAY,CAAC,UAAU,EAAE;AAC3B,YAAA,YAAY,GAAG,YAAY,CAAC,UAAU,CAAC,UAAgC,CAAC;AACxE,YAAA,IAAI,YAAY,CAAC,EAAE,KAAK,eAAe,EAAE;AACvC,gBAAA,OAAO,YAAY,CAAC;AACrB,aAAA;YACD,OAAO,CAAC,YAAY,CAAC,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;AACzC,gBAAA,IAAI,YAAY,CAAC,EAAE,KAAK,SAAS,EAAE;AACjC,oBAAA,OAAO,IAAI,CAAC;AACb,iBAAA;AACD,gBAAA,YAAY,GAAG,YAAY,CAAC,UAAgC,CAAC;AAC9D,aAAA;AACF,SAAA;AACD,QAAA,OAAO,YAAY,CAAC;KACrB;AACO,IAAA,UAAU,CAAC,IAAa,EAAA;QAC9B,IAAI,CAAC,SAAS,GAAG;AACf,YAAA,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAE,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,WAAsB,IAAI,CAAC,IAAI,GAAG;AAC7E,YAAA,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAE,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,WAAsB,IAAI,CAAC,IAAI,GAAG;AAC7E,YAAA,KAAK,EAAE,IAAI,CAAC,KAAK,GAAI,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,WAAsB,IAAI,CAAC;AAC7E,YAAA,MAAM,EAAE,IAAI,CAAC,MAAM,GAAI,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,WAAsB,IAAI,CAAC;AAC/E,YAAA,OAAO,EAAE,OAAO;SACjB,CAAC;KACH;AACD,IAAA,UAAU,CAAC,SAAuB,EAAA;QAChC,IAAI,aAAa,GAAG,IAAI,CAAC;AACzB,QAAA,MAAM,OAAO,GAAG,SAAS,CAAC,MAA4B,CAAC;QACvD,OAAO,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC,SAAS,KAAI;AACpD,YAAA,IAAI,CAAC,aAAa;gBAAE,OAAO;YAC3B,IAAI,IAAI,CAAC,eAAe,EAAE;gBACxB,IAAI,CAAC,eAAe,CAAC,CAAC,IAAK,SAA0B,CAAC,SAAS,CAAC;gBAChE,IAAI,CAAC,eAAe,CAAC,CAAC,IAAK,SAA0B,CAAC,SAAS,CAAC;AACjE,aAAA;AACH,SAAC,CAAC,CAAC;AACH,QAAA,OAAO,CAAC,gBAAgB,CAAC,WAAW,EAAE,MAAK;YACzC,aAAa,GAAG,KAAK,CAAC;AACxB,SAAC,CAAC,CAAC;KACJ;AACD,IAAA,YAAY,CAAC,SAAuB,EAAA;QAClC,IAAI,aAAa,GAAG,IAAI,CAAC;AACzB,QAAA,MAAM,OAAO,GAAG,SAAS,CAAC,MAA4B,CAAC;QACvD,QAAQ,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC,SAAS,KAAI;AACrD,YAAA,IAAI,CAAC,aAAa;gBAAE,OAAO;AAC3B,YAAA,MAAM,IAAI,GAAG,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,YAAA,MAAM,CAAC,GAAI,SAA0B,CAAC,SAAS,CAAC;AAChD,YAAA,MAAM,CAAC,GAAI,SAA0B,CAAC,SAAS,CAAC;YAChD,MAAM,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;AACxD,YAAA,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AACzB,YAAA,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAC3B,YAAA,QAAQ,IAAI,CAAC,eAAe,CAAC,IAAI;gBAC/B,KAAK,eAAe,CAAC,OAAO;AAC1B,oBAAA,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC;oBAClD,MAAM;gBACR,KAAK,eAAe,CAAC,IAAI;AACvB,oBAAA,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC;oBAChD,MAAM;AACR,gBAAA;AACE,oBAAA,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC;oBACnD,MAAM;AACT,aAAA;AACD,YAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;AAC9D,SAAC,CAAC,CAAC;AACH,QAAA,QAAQ,CAAC,gBAAgB,CAAC,WAAW,EAAE,MAAK;YAC1C,aAAa,GAAG,KAAK,CAAC;AACxB,SAAC,CAAC,CAAC;KACJ;IACO,WAAW,CAAC,GAAW,EAAE,IAAU,EAAA;AACzC,QAAA,QAAQ,GAAG;AACT,YAAA,KAAK,IAAI;gBACN,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAa,IAAI,IAAI,CAAC,CAAC,CAAC;gBACrD,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAa,IAAI,IAAI,CAAC,CAAC,CAAC;gBACtD,MAAM;AACR,YAAA,KAAK,GAAG;gBACL,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAa,IAAI,IAAI,CAAC,CAAC,CAAC;gBACtD,MAAM;AACR,YAAA,KAAK,IAAI;gBACN,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAa,IAAI,IAAI,CAAC,CAAC,CAAC;gBACrD,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAa,IAAI,IAAI,CAAC,CAAC,CAAC;gBACtD,MAAM;AACR,YAAA,KAAK,GAAG;gBACL,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAa,IAAI,IAAI,CAAC,CAAC,CAAC;gBACtD,MAAM;AACR,YAAA,KAAK,IAAI;gBACN,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAa,IAAI,IAAI,CAAC,CAAC,CAAC;gBACrD,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAa,IAAI,IAAI,CAAC,CAAC,CAAC;gBACtD,MAAM;AACR,YAAA,KAAK,GAAG;gBACL,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAa,IAAI,IAAI,CAAC,CAAC,CAAC;gBACtD,MAAM;AACR,YAAA,KAAK,IAAI;gBACN,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAa,IAAI,IAAI,CAAC,CAAC,CAAC;gBACrD,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAa,IAAI,IAAI,CAAC,CAAC,CAAC;gBACtD,MAAM;AACR,YAAA,KAAK,GAAG;gBACL,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAa,IAAI,IAAI,CAAC,CAAC,CAAC;gBACtD,MAAM;AACT,SAAA;KACF;IACO,aAAa,CAAC,GAAW,EAAE,IAAU,EAAA;AAC3C,QAAA,QAAQ,GAAG;AACT,YAAA,KAAK,IAAI;gBACP,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;gBACrC,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACpC,gBAAA,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAa,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACzD,gBAAA,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAa,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;gBAC1D,MAAM;AACR,YAAA,KAAK,GAAG;gBACN,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACpC,gBAAA,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAa,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;gBAC1D,MAAM;AACR,YAAA,KAAK,IAAI;gBACP,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;gBACrC,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACpC,gBAAA,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAa,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACzD,gBAAA,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAa,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;gBAC1D,MAAM;AACR,YAAA,KAAK,GAAG;gBACN,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACpC,gBAAA,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAa,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;gBAC1D,MAAM;AACR,YAAA,KAAK,IAAI;gBACP,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;gBACrC,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACpC,gBAAA,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAa,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACzD,gBAAA,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAa,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;gBAC1D,MAAM;AACR,YAAA,KAAK,GAAG;gBACN,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACpC,gBAAA,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAa,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;gBAC1D,MAAM;AACR,YAAA,KAAK,IAAI;gBACP,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;gBACrC,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACpC,gBAAA,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAa,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACzD,gBAAA,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAa,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;gBAC1D,MAAM;AACR,YAAA,KAAK,GAAG;gBACN,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACpC,gBAAA,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAa,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;gBAC1D,MAAM;AACT,SAAA;KACF;IACO,cAAc,CAAC,GAAW,EAAE,IAAU,EAAA;AAC5C,QAAA,QAAQ,GAAG;AACT,YAAA,KAAK,IAAI;gBACP,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;gBACjC,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;AACjC,gBAAA,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;AACzD,gBAAA,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;gBAC3D,MAAM;AACR,YAAA,KAAK,GAAG;gBACN,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;AACjC,gBAAA,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;gBAC3D,MAAM;AACR,YAAA,KAAK,IAAI;gBACP,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;AACjC,gBAAA,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;AACzD,gBAAA,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;gBAC3D,MAAM;AACR,YAAA,KAAK,GAAG;AACN,gBAAA,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;gBACzD,MAAM;AACR,YAAA,KAAK,IAAI;AACP,gBAAA,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;AACzD,gBAAA,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;gBAC3D,MAAM;AACR,YAAA,KAAK,GAAG;AACN,gBAAA,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;gBAC3D,MAAM;AACR,YAAA,KAAK,IAAI;gBACP,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;AACjC,gBAAA,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;AACzD,gBAAA,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;gBAC3D,MAAM;AACR,YAAA,KAAK,GAAG;gBACN,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;AACjC,gBAAA,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;gBACzD,MAAM;AACT,SAAA;KACF;AAEO,IAAA,YAAY,CAAC,YAA0B,EAAA;AAC7C,QAAA,IAAI,YAAY,EAAE;YAChB,YAAY,CAAC,WAAW,EAAE,CAAC;AAC5B,SAAA;KACF;;kHAr+BU,qBAAqB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAA,mBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAArB,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,qBAAqB,0kCCdlC,4heAoMM,EAAA,MAAA,EAAA,CAAA,s8EAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDtLO,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBALjC,SAAS;+BACE,eAAe,EAAA,QAAA,EAAA,4heAAA,EAAA,MAAA,EAAA,CAAA,s8EAAA,CAAA,EAAA,CAAA;uGAMzB,YAAY,EAAA,CAAA;sBADX,SAAS;gBAAC,IAAA,EAAA,CAAA,cAAc,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAA;gBAEO,SAAS,EAAA,CAAA;sBAA3D,SAAS;gBAAC,IAAA,EAAA,CAAA,WAAW,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAA;gBAI5B,IAAI,EAAA,CAAA;sBAAhB,KAAK;gBASG,OAAO,EAAA,CAAA;sBAAf,KAAK;gBAEO,YAAY,EAAA,CAAA;sBAAxB,KAAK;gBAUG,cAAc,EAAA,CAAA;sBAAtB,KAAK;gBACG,WAAW,EAAA,CAAA;sBAAnB,KAAK;gBACG,YAAY,EAAA,CAAA;sBAApB,KAAK;gBACG,UAAU,EAAA,CAAA;sBAAlB,KAAK;gBACG,MAAM,EAAA,CAAA;sBAAd,KAAK;gBACG,WAAW,EAAA,CAAA;sBAAnB,KAAK;gBACG,WAAW,EAAA,CAAA;sBAAnB,KAAK;gBACG,eAAe,EAAA,CAAA;sBAAvB,KAAK;gBACG,QAAQ,EAAA,CAAA;sBAAhB,KAAK;gBACG,OAAO,EAAA,CAAA;sBAAf,KAAK;gBACG,IAAI,EAAA,CAAA;sBAAZ,KAAK;gBACG,IAAI,EAAA,CAAA;sBAAZ,KAAK;gBACG,UAAU,EAAA,CAAA;sBAAlB,KAAK;gBACG,QAAQ,EAAA,CAAA;sBAAhB,KAAK;gBACG,SAAS,EAAA,CAAA;sBAAjB,KAAK;gBACG,UAAU,EAAA,CAAA;sBAAlB,KAAK;gBACG,CAAC,EAAA,CAAA;sBAAT,KAAK;gBACG,CAAC,EAAA,CAAA;sBAAT,KAAK;gBACG,UAAU,EAAA,CAAA;sBAAlB,KAAK;gBACG,QAAQ,EAAA,CAAA;sBAAhB,KAAK;gBACG,UAAU,EAAA,CAAA;sBAAlB,KAAK;gBACG,aAAa,EAAA,CAAA;sBAArB,KAAK;gBAEI,KAAK,EAAA,CAAA;sBAAd,MAAM;gBACG,UAAU,EAAA,CAAA;sBAAnB,MAAM;gBACG,KAAK,EAAA,CAAA;sBAAd,MAAM;gBACG,IAAI,EAAA,CAAA;sBAAb,MAAM;gBACG,IAAI,EAAA,CAAA;sBAAb,MAAM;gBACG,IAAI,EAAA,CAAA;sBAAb,MAAM;gBACG,UAAU,EAAA,CAAA;sBAAnB,MAAM;gBACG,aAAa,EAAA,CAAA;sBAAtB,MAAM;gBACG,aAAa,EAAA,CAAA;sBAAtB,MAAM;gBACG,WAAW,EAAA,CAAA;sBAApB,MAAM;;;MEjEI,kBAAkB,CAAA;;+GAAlB,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAlB,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,EAHd,YAAA,EAAA,CAAA,qBAAqB,CAD1B,EAAA,OAAA,EAAA,CAAA,YAAY,aAEZ,qBAAqB,CAAA,EAAA,CAAA,CAAA;AAEpB,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,YAJnB,YAAY,CAAA,EAAA,CAAA,CAAA;2FAIX,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAL9B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,YAAY,EAAE,CAAC,qBAAqB,CAAC;oBACrC,OAAO,EAAE,CAAC,qBAAqB,CAAC;iBACjC,CAAA;;;ACRD;;AAEG;;ACFH;;AAEG;;;;"}